openapi: 3.0.0
info:
  title: Aza app
  version: 1.0.0

servers:
  - url: https://dev.app.terhoma.com
  
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Cap
  - name: Cap > customer
  - name: Cap > group
  - name: Order
  - name: Order > order scheduled
  - name: Order > Order v2
  - name: Faq
  - name: Quote
  - name: Checkout
  - name: Payments
  - name: Payments > payouts
  - name: Payments > payment
  - name: Approval-request
  - name: SmsEmail
  - name: Wallet
  - name: Wallet > Wallet V2
  - name: Wallet > Wallet
  - name: Wallet > Group Wallet
paths:
  /payments/payout-beneficiary/delete/{id}:
   delete:
    tags:
      - Payments > payouts
    summary: Delete Payout Beneficiary
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: The ID of the payout beneficiary to delete.
      - in: query
        name: reason
        required: false
        schema:
          type: string
        description: The reason for deleting the beneficiary.
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Payout beneficiary deleted successfully."
                deletedId:
                  type: string
                  example: "65ce00daf211eb556c637dbe"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid ID supplied."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Payout beneficiary not found."
  /011/interswitch/verify-withdraw-money:
   get:
    tags:
      - Payments > payouts
    summary: Verify Fund Transfer
    security:
      - bearerAuth: []
    parameters:
      - name: TerminalId
        in: header
        required: true
        schema:
          type: string
        description: Terminal ID of the requesting device or entity.
        example: 3pbl0001
      - name: requestRef
        in: query
        required: true
        schema:
          type: string
        description: Unique reference number for the fund transfer request.
        example: '804564454577'
    responses:
      '200':
        description: Successful verification response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                transactionId:
                  type: string
                  example: "TX1234567890"
                amount:
                  type: number
                  format: float
                  example: 1500.75
                currency:
                  type: string
                  example: "NGN"
                verified:
                  type: boolean
                  example: true
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid requestRef supplied."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Transaction not found."
  /011/interswitch/withdraw-money:
   post:
    tags:
      - Payments > payouts
    summary: Fund Transfer (Withdraw)
    security:
      - bearerAuth: []
    parameters:
      - name: accountNumber
        in: query
        required: true
        schema:
          type: string
        description: The account number to withdraw from.
        example: '3001155245'
      - name: accountType
        in: query
        required: true
        schema:
          type: string
        description: The type of account.
        example: '00'
      - name: amount
        in: query
        required: true
        schema:
          type: number
          format: float
        description: The amount to withdraw.
        example: 20.00
      - name: orderId
        in: query
        required: true
        schema:
          type: string
        description: Unique order ID for the transaction.
        example: '1709540052636'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              sender:
                type: object
                properties:
                  phone:
                    type: string
                    description: Sender's phone number.
                    example: '08124888436'
                  email:
                    type: string
                    format: email
                    description: Sender's email address.
                    example: 'dadubiaro@interswitch.com'
                  lastName:
                    type: string
                    description: Sender's last name.
                    example: 'Adubiaro'
                  firstName:
                    type: string
                    description: Sender's first name.
                    example: 'Deborah'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                transactionId:
                  type: string
                  example: "TX9876543210"
                amount:
                  type: number
                  format: float
                  example: 20.00
                currency:
                  type: string
                  example: "NGN"
                message:
                  type: string
                  example: "Withdrawal successful."
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid account details."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Account not found."
  /011/payout-beneficiary/list/{id}:
   get:
    tags:
      - Payments > payouts
    summary: List of Banks
    security:
      - bearerAuth: []
    parameters:
      - name: mode
        in: query
        required: true
        schema:
          type: string
        description: Mode of the transaction (e.g., bank transfer, mobile transfer).
        example: banktransfer
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The ID of the payout beneficiary to list.
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                banks:
                  type: array
                  items:
                    type: object
                    properties:
                      bankName:
                        type: string
                        example: "First Bank of Nigeria"
                      bankCode:
                        type: string
                        example: "011"
                      country:
                        type: string
                        example: "Nigeria"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid mode or request parameters."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "No banks found for the given mode."
  /payments/transaction/details/{id}:
   get:
    tags:
      - Payments > payment
    summary: Get Transaction Details
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The ID of the payout beneficiary to details.
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
        description: The content type of the request.
        example: application/json
      - name: type
        in: query
        required: true
        schema:
          type: string
        description: Type of the transaction (credit, debit).
        example: credit
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                transactionDetails:
                  type: object
                  properties:
                    transactionId:
                      type: string
                      example: "628db82f057ca2959104691f"
                    amount:
                      type: number
                      format: float
                      example: 150.75
                    currency:
                      type: string
                      example: "USD"
                    transactionDate:
                      type: string
                      format: date-time
                      example: "2023-01-15T10:30:00Z"
                    type:
                      type: string
                      example: "credit"
                    accountNumber:
                      type: string
                      example: "0123456789"
                    description:
                      type: string
                      example: "Payment for invoice #12345"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid request parameters."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Transaction not found."
  /011/card/delete/{id}:
   delete:
    tags:
      - Payments > payment
    summary: Delete Card
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The ID of the payout beneficiary to list.
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
        description: The content type of the request.
        example: application/json
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Card successfully deleted."
                deletedCardId:
                  type: string
                  example: "65dd7a062aa5cd6369c5386c"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid cardId or request parameters."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Card not found."
  /011/interswitch/create-bank-account:
   post:
    tags:
      - Payments > payment
    summary: Create Bank Account
    security:
      - bearerAuth: []
    parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
        description: The content type of the request.
        example: application/json
      - name: AccountNumber
        in: query
        required: true
        schema:
          type: string
        description: The account number to be created.
        example: '0698784000'
      - name: BankId
        in: query
        required: true
        schema:
          type: integer
        description: The ID of the bank where the account will be created.
        example: 10
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              AccountNumber:
                type: string
                description: The account number to be created.
                example: '0698784000'
              BankId:
                type: integer
                description: The ID of the bank where the account will be created.
                example: 10
              name:
                type: string
                description: The name associated with the bank account.
                example: 'Ajay Singh'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Bank account created successfully."
                accountId:
                  type: string
                  example: "acc1234567890"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid account details or parameters."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Bank not found."
  /011/interswitch/list-bank-code:
   get:
    tags:
      - Payments > payment
    summary: List Bank Codes
    parameters:
      - name: filter
        in: query
        schema:
          type: string
        description: Optional filter to narrow down the bank codes (e.g., by country or bank name).
        example: "Nigeria"
      - name: limit
        in: query
        schema:
          type: integer
        description: Optional limit for the number of results returned.
        example: 10
      - name: sortBy
        in: query
        schema:
          type: string
        description: Optional parameter to sort the results by a specific attribute (e.g., code, name).
        example: "name"
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                bankCodes:
                  type: array
                  items:
                    type: object
                    properties:
                      bankName:
                        type: string
                        example: "First Bank"
                      bankCode:
                        type: string
                        example: "011"
                      country:
                        type: string
                        example: "Nigeria"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid filter or parameters."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Bank codes not found."
  /payments/interswitch/otp-validate:
   post:
    tags:
      - Payments > payment
    summary: Validate OTP
    security:
      - bearerAuth: []
    parameters:
      - name: paymentId
        in: query
        required: true
        schema:
          type: string
        description: The ID of the payment for which OTP is being validated.
        example: '474596116'
      - name: otp
        in: query
        required: true
        schema:
          type: string
        description: The OTP code to validate.
        example: '123456'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              paymentId:
                type: string
                description: The ID of the payment for which OTP is being validated.
                example: '474596116'
              otp:
                type: string
                description: The OTP code to validate.
                example: '123456'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "OTP validation successful."
                transactionId:
                  type: string
                  example: "txn123456789"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid OTP or paymentId."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Payment not found."
  /payments/card/create:
   post:
    tags:
      - Payments > payment
    summary: Save Card Details
    security:
      - bearerAuth: []
    parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
        description: The name on the card.
        example: Visa
      - name: pan
        in: query
        required: true
        schema:
          type: string
        description: The primary account number (PAN) of the card.
        example: '6280511000000095'
      - name: month
        in: query
        required: true
        schema:
          type: string
        description: The expiration month of the card.
        example: '03'
      - name: year
        in: query
        required: true
        schema:
          type: string
        description: The expiration year of the card.
        example: '50'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name on the card.
                example: Visa
              pan:
                type: string
                description: The primary account number (PAN) of the card.
                example: '6280511000000095'
              month:
                type: string
                description: The expiration month of the card.
                example: '03'
              year:
                type: string
                description: The expiration year of the card.
                example: '50'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Card details saved successfully."
                cardId:
                  type: string
                  example: "card1234567890"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid card details or parameters."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
  /011/interswitch/resend-otp:
   post:
    tags:
      - Payments > payment
    summary: Resend OTP
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              paymentId:
                type: string
                description: The ID of the payment for which OTP is being resent.
                example: '3530066'
              amount:
                type: string
                description: The amount for the payment.
                example: '2000'
              currency:
                type: string
                description: The currency of the payment.
                example: NGN
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "OTP has been resent successfully."
                resendId:
                  type: string
                  example: "resend123456789"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid payment details or parameters."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Payment not found."
  /011/interswitch/verify-payment:
   post:
    tags:
      - Payments > payment
    summary: Verify Payment
    security:
      - noauthAuth: []
    parameters:
      - name: amount
        in: query
        required: true
        schema:
          type: integer
        description: The amount of the payment to verify.
        example: 3000
      - name: merchantcode
        in: query
        required: true
        schema:
          type: string
        description: The merchant code associated with the payment.
        example: MX21696
      - name: transactionRef
        in: query
        required: true
        schema:
          type: string
        description: The reference ID of the transaction to verify.
        example: '1708944611978'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
                type: integer
                description: The amount of the payment to verify.
                example: 3000
              merchantcode:
                type: string
                description: The merchant code associated with the payment.
                example: MX21696
              transactionRef:
                type: string
                description: The reference ID of the transaction to verify.
                example: '1708944611978'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Payment verified successfully."
                verificationId:
                  type: string
                  example: "verification123456789"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid payment details or parameters."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Transaction not found."
  /collections/api/v1/gettransaction.json:
   get:
    tags:
      - Payments > payment
    summary: Verify Payment for Card Payment
    security:
      - noauthAuth: []
    parameters:
      - name: merchantcode
        in: query
        required: true
        schema:
          type: string
        description: The merchant code associated with the card payment.
        example: MX21696
      - name: transactionreference
        in: query
        required: true
        schema:
          type: string
        description: The reference ID of the transaction to verify.
        example: trans009668211902
      - name: amount
        in: query
        required: true
        schema:
          type: integer
        description: The amount of the card payment to verify.
        example: 12000
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Transaction verified successfully."
                transactionDetails:
                  type: object
                  properties:
                    transactionId:
                      type: string
                      example: "txn123456789"
                    amount:
                      type: integer
                      example: 12000
                    currency:
                      type: string
                      example: "NGN"
                    merchantcode:
                      type: string
                      example: "MX21696"
                    transactionreference:
                      type: string
                      example: "trans009668211902"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid transaction details or parameters."
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Transaction not found."
  /011/interswitch/card-payment:
   post:
    tags:
      - Payments > payment
    summary: Process Card Payment
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              customerId:
                type: string
                description: The email or ID of the customer making the payment.
                example: aj@gmail.com
              pan:
                type: string
                description: The primary account number (PAN) of the card.
                example: '6280511000000095'
              expiryDate:
                type: string
                description: The expiration date of the card in MMYY format.
                example: '0325'
              cvv:
                type: string
                description: The CVV code of the card.
                example: '111'
              pin:
                type: string
                description: The PIN for the card payment.
                example: '1111'
              amount:
                type: integer
                description: The amount to be charged.
                example: 30
              orderId:
                type: string
                description: The unique identifier for the order.
                example: '1708944611978'
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Payment processed successfully."
                transactionId:
                  type: string
                  example: "txn1234567890"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid payment details or parameters."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Authentication failed."
      '402':
        description: Payment Required
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Insufficient funds or payment failed."
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "An error occurred while processing the payment."
  
  /cap/users/customer/login-otp:
   post:
    tags:
      - Cap > customer
    summary: Login/Register With OTP
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              mobile:
                type: string
                example: '8349212145'
              otp:
                type: string
                example: '7587'
    security:
      - noauthAuth: []
    parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          example: application/json
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
      - in: query
        name: redirectUrl
        required: false
        schema:
          type: string
          example: 'https://example.com/home'
        description: URL to redirect the user after successful login
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                message:
                  type: string
                  example: "Login successful."
                redirectUrl:
                  type: string
                  example: "https://example.com/home"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid OTP or mobile number."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid encrypted key."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/login:
   post:
    tags:
      - Cap > customer
    summary: Login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: 't12@yopmail.com'
              password:
                type: string
                example: 'jeet123'
    security:
      - noauthAuth: []
    parameters:
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          example: application/json
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
      - in: query
        name: redirectUrl
        required: false
        schema:
          type: string
          example: 'https://example.com/dashboard'
        description: URL to redirect the user after successful login
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                message:
                  type: string
                  example: "Login successful."
                redirectUrl:
                  type: string
                  example: "https://example.com/dashboard"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid email or password."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid encrypted key."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/email-otp-signup:
   post:
    tags:
      - Cap > customer
    summary: Login Signup With Email OTP
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: 'jeetyaduvanshi8@gmail.com'
              password:
                type: string
                example: 'jeet123'
              otp:
                type: string
                example: '7694'
    parameters:
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
      - in: query
        name: redirectUrl
        required: false
        schema:
          type: string
          example: 'https://example.com/welcome'
        description: URL to redirect the user after successful signup
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                message:
                  type: string
                  example: "Signup and login successful."
                redirectUrl:
                  type: string
                  example: "https://example.com/welcome"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid OTP or email."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid encrypted key."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/verify-email-otp:
   post:
    tags:
      - Cap > customer
    summary: Verify Email OTP
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: string
                example: '65c6241d2d78ad9945100472'
              otp:
                type: string
                example: '6617'
    parameters:
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
      - in: query
        name: redirectUrl
        required: false
        schema:
          type: string
          example: 'https://example.com/dashboard'
        description: URL to redirect the user after successful OTP verification
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Email OTP verified successfully."
                redirectUrl:
                  type: string
                  example: "https://example.com/dashboard"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid OTP or user ID."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid encrypted key."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/social-login:
    post:
      tags:
        - Cap > customer
      summary: Social Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                accessToken: >-
                  eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkYzRlMTA5ODE1ZjQ2OTQ2MGU2M2QzNGNkNjg0MjE1MTQ4ZDdiNTkiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzODA5MzU3MTMyMTktZ2EwdmQ5MDhlbXQ2Z2w3cHJhYnUxZW84YnQybmhsa2IuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIzODA5MzU3MTMyMTktMDlrb3Vxa2V0Zm50bGNycjdyazlxNGpkbDg1dWpobzQuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDkwMjUwNDYxNDE2OTI3NDEwNTMiLCJlbWFpbCI6ImNoYXVyYXNpYWFsb2s0NjY5QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiYWxvayBjaGF1cmFzaWEiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSk9waFNCcENpbzNKMXlUZnlVZFZSelFEMWRZNzZGNEpUXzNsRy1FRGw0PXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6ImFsb2siLCJmYW1pbHlfbmFtZSI6ImNoYXVyYXNpYSIsImxvY2FsZSI6ImVuIiwiaWF0IjoxNzA3NDgyMTA1LCJleHAiOjE3MDc0ODU3MDV9.h5ofhwNvMfUV0CrLPHs6zL3ejtY8qKjCu3XfGct0LlWYN9_bH1mIhQZ27dNNTF3kmni-gUIfgKv8faazjThCJ2ovY_3DccuVZwEdo5ZsA9SNSu3TWq3IPjky10RXTSlSDOIUBk743CdeH1idhvLzAAvQ-NvB5Yt9AUvM3hpYM01OBtrRgFUsTjt6NslpwhftpppgnukPPIBc2LM_oq9LiohJT2f6IO_dmEqzXodcb67Mk9JsHXWXTaf5YTSKH71gyaTtdE8qDyvuWue2rTHROGMfQ8qejcLrFB5WU33vk3UrNYGWhHn-uyhiOnhb6RN5mChgxpj_SaQygH52nTFRgw
                category: CUSTOMER
      security:
        - noauthAuth: []
      parameters:
        - name: x-encrypted-key
          in: header
          schema:
            type: string
          example: 65b76fe258abb2dbf758e423
        - name: providerType
          in: query
          schema:
            type: string
          example: GOOGLE
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /cap/users/customer/update-profile:
   post:
    tags:
      - Cap > customer
    summary: Become a Lender
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              extendedAttributes:
                type: object
                properties:
                  isLender:
                    type: boolean
                    example: true
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Profile updated successfully."
                isLender:
                  type: boolean
                  example: true
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid profile data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/forgot-password:
   post:
    tags:
      - Cap > customer
    summary: Send Reset Password Request
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "jeetyaduvanshi8@gmail.com"
    security:
      - noauthAuth: []
    parameters:
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Password reset link has been sent to your email."
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid email address."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid encrypted key."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/reset-password:
   post:
    tags:
      - Cap > customer
    summary: Reset Password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              resetRef:
                type: string
                example: "65ca0d9b8fba24555e4495ad"
              password:
                type: string
                example: "jitendra12345"
              verificationCode:
                type: string
                example: "1720"
    security:
      - noauthAuth: []
    parameters:
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Password has been reset successfully."
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid reset reference or verification code."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid encrypted key."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/list:
   get:
    tags:
      - Cap > customer
    summary: Lender List
    security:
      - bearerAuth: []
    parameters:
      - name: lender
        in: query
        required: false
        schema:
          type: string
          enum: ['y', 'n']
          example: 'y'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: "65ca0d9b8fba24555e4495ad"
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "johndoe@example.com"
                  isLender:
                    type: boolean
                    example: true
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid query parameter."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/send-referral:
   post:
    tags:
      - Cap > customer
    summary: Send Referral Invitation
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "65f9977c4743f9780ebb9033"
    parameters:
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 5f15542bf8254748f1d9dfad
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Referral invitations have been sent successfully."
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid request data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/top-lenders:
   get:
    tags:
      - Cap > customer
    summary: Top Lenders
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: "65f9977c4743f9780ebb9033"
                  name:
                    type: string
                    example: "Alice Smith"
                  totalLent:
                    type: number
                    format: float
                    example: 10000.00
                  rating:
                    type: number
                    format: float
                    example: 4.5
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/update-interest-rate/{id}:
   post:
    tags:
      - Cap > customer
    summary: Update Interest Rate
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: "65f1511d751d567ba21f63d1"
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tenure:
                type: integer
                example: 2
              rate:
                type: string
                example: '3.8'
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Interest rate updated successfully."
                id:
                  type: string
                  example: "65f1511d751d567ba21f63d1"
                tenure:
                  type: integer
                  example: 2
                rate:
                  type: string
                  example: '3.8'
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid input data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Interest rate record not found."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/remove-interest-rate/{id}:
   delete:
    tags:
      - Cap > customer
    summary: Remove Interest Rate
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: "65f0f795cdb99dbcf96664a7"
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Interest rate removed successfully."
                id:
                  type: string
                  example: "65f0f795cdb99dbcf96664a7"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Interest rate record not found."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/forgot-lock-pin:
   post:
    tags:
      - Cap > customer
    summary: Forgot Lock Pin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              phone:
                type: string
                example: '9891980048'
              concern:
                type: string
                example: CUSTOMER_OTP_LOGIN_CONCERN
              channel:
                type: string
                example: SMS
    parameters:
      - name: x-encrypted-key
        in: header
        required: true
        schema:
          type: string
          example: 65b76fe258abb2dbf758e423
    security:
      - noauthAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "OTP has been sent successfully."
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid request data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/set-interest-rate:
   post:
    tags:
      - Cap > customer
    summary: Create Interest Rate
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tenure:
                type: integer
                example: 2
              rate:
                type: string
                example: '4.5'
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Interest rate created successfully."
                tenure:
                  type: integer
                  example: 2
                rate:
                  type: string
                  example: '4.5'
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid request data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/customer/verify-pin:
   post:
    tags:
      - Cap > customer
    summary: Verify Pin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              lockPin:
                type: string
                example: '1991'
              transactionPin:
                type: string
                example: '154333'
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Pins verified successfully."
                status:
                  type: string
                  example: "success"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid pin format or missing data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/group/update-group:
   post:
    tags:
      - Cap > customer
    summary: Update Group
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              _id:
                type: string
                example: '6679559813801094d3b71d00'
              groupName:
                type: string
                example: 'collection12'
              startDate:
                type: string
                format: date
                example: '2024-04-12'
              contribution:
                type: integer
                example: 2000
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Group updated successfully."
                group:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '6679559813801094d3b71d00'
                    groupName:
                      type: string
                      example: 'collection12'
                    startDate:
                      type: string
                      format: date
                      example: '2024-04-12'
                    contribution:
                      type: integer
                      example: 2000
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid input data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Group not found."
                status:
                  type: string
                  example: "error"
  /cap/users/group/update-member/{groupId}:
   post:
    tags:
      - Cap > group
    summary: Update Member in Group
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              memberId:
                type: string
                example: '65f7e8974743f93f5cbb9008'
              paymentSlot:
                type: string
                example: '3'
    parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: '6679559813801094d3b71d00'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Member updated successfully."
                member:
                  type: object
                  properties:
                    memberId:
                      type: string
                      example: '65f7e8974743f93f5cbb9008'
                    paymentSlot:
                      type: string
                      example: '3'
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid input data."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Group or member not found."
                status:
                  type: string
                  example: "error"
  /cap/users/group/get-group:
   get:
    tags:
      - Cap > group
    summary: Get Group List
    security:
      - bearerAuth: []
    parameters:
      - name: type
        in: query
        required: false
        schema:
          type: string
          example: 'join'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                groups:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '6679559813801094d3b71d00'
                      groupName:
                        type: string
                        example: 'collection12'
                      startDate:
                        type: string
                        format: date
                        example: '2024-04-12'
                      contribution:
                        type: integer
                        example: 2000
                message:
                  type: string
                  example: "Groups retrieved successfully."
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/group/get-group-details/{groupId}:
   get:
    tags:
      - Cap > group
    summary: Get Group Details
    parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: '6679559813801094d3b71d00'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '6679559813801094d3b71d00'
                    groupName:
                      type: string
                      example: 'collection12'
                    startDate:
                      type: string
                      format: date
                      example: '2024-04-12'
                    contribution:
                      type: integer
                      example: 2000
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          memberId:
                            type: string
                            example: '65f7e8974743f93f5cbb9008'
                          name:
                            type: string
                            example: 'John Doe'
                          paymentSlot:
                            type: string
                            example: '3'
                message:
                  type: string
                  example: "Group details retrieved successfully."
      '404':
        description: Group Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Group not found."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /cap/users/group/create-group:
   post:
    tags:
      - Cap > group
    summary: Create Group
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              tenant:
                type: string
                example: '65b76fe258abb2dbf758e423'
              groupName:
                type: string
                example: 'Test group 5'
              startDate:
                type: string
                format: date-time
                example: '2024-07-17T09:20:36.820Z'
              contribution:
                type: integer
                example: 1212
              status:
                type: string
                example: 'PENDING'
              tenure:
                type: integer
                example: 1
              members:
                type: array
                items:
                  type: object
                  properties:
                    groupAdmin:
                      type: boolean
                      example: true
                    memberId:
                      type: string
                      example: '664ed4f9951a8b7d37cacee4'
                    paymentSlot:
                      type: integer
                      example: 1
                    priority:
                      type: integer
                      example: 1
                    status:
                      type: string
                      example: 'ACTIVE'
              groupProfilePhoto:
                type: string
                format: uri
                example: 'https://cash-me-dev.s3.amazonaws.com/images/Tenant/docs/lyo7mig9qf3'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Group created successfully."
                groupId:
                  type: string
                  example: "6679559813801094d3b71d00"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid group data provided."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
  /000/users/customer/set-lock-pin:
   post:
    tags:
      - Cap
    summary: Check Old Lock Pin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              newLockPin:
                type: string
                example: '1232'
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: oldLockPin
        required: true
        schema:
          type: string
          example: '5678'
        description: The old lock PIN to be checked
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Lock PIN updated successfully."
                status:
                  type: string
                  example: "success"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid old lock PIN."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Authentication required."
                status:
                  type: string
                  example: "error"
  /000/users/customer/set-transaction-pin:
   post:  
    tags:
      - Cap
    summary: Check Transaction Lock Pin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              oldTransactionPin:
                type: string
                example: '123456'
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: newTransactionPin
        required: true
        schema:
          type: string
          example: '654321'
        description: The new transaction PIN to be set
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Transaction PIN updated successfully."
                status:
                  type: string
                  example: "success"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid old transaction PIN."
                status:
                  type: string
                  example: "error"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Authentication required."
                status:
                  type: string
                  example: "error"

  /order/api/v2/order-schedule/details/{id}:
   get:
      tags:
        - Order > order scheduled
      summary: Scheduled Order Details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: order is required,
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '123456'
                  status:
                    type: string
                    example: 'Scheduled'
                  scheduledDate:
                    type: string
                    format: date-time
                    example: '2024-08-15T10:00:00Z'
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                          example: '987654'
                        quantity:
                          type: integer
                          example: 2
                        price:
                          type: number
                          example: 19.99
                  customerDetails:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'John Doe'
                      phone:
                        type: string
                        example: '+1234567890'
                      email:
                        type: string
                        example: 'john.doe@example.com'
                  deliveryAddress:
                    type: object
                    properties:
                      fullName:
                        type: string
                        example: 'John Doe'
                      street1:
                        type: string
                        example: '123 Main St'
                      street2:
                        type: string
                        example: 'Apt 4B'
                      city:
                        type: string
                        example: 'Springfield'
                      state:
                        type: string
                        example: 'IL'
                      zip:
                        type: string
                        example: '62704'
                      country:
                        type: string
                        example: 'USA'
  /order/api/v2/order-schedule/list:
   get:
    tags:
      - Order > order scheduled
    summary: List Scheduled Orders
    security:
      - bearerAuth: []
    parameters:
      - name: fromDate
        in: query
        schema:
          type: string
          format: date
          example: '2023-10-01'
      - name: toDate
        in: query
        schema:
          type: string
          format: date
          example: '2023-10-01'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: '123456'
                  status:
                    type: string
                    example: 'Scheduled'
                  scheduledDate:
                    type: string
                    format: date-time
                    example: '2024-08-15T10:00:00Z'
                  customerDetails:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'John Doe'
                      phone:
                        type: string
                        example: '+1234567890'
                      email:
                        type: string
                        example: 'john.doe@example.com'
  /order/api/v2/order-schedule/update/{id}:
   patch:
    tags:
      - Order > order scheduled
    summary: Scheduled Order Status Update
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '123456'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'Cancelled'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: '123456'
                status:
                  type: string
                  example: 'Cancelled'
                updatedAt:
                  type: string
                  format: date-time
                  example: '2024-08-15T10:00:00Z'
  /order/api/v2/request-loan/total-outstanding-lent-amount:
   get:
    tags:
       - Order > Order v2
    summary: Total Outstanding Lent Amount
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                totalOutstandingAmount:
                  type: number
                  format: double
                  example: 1200.50
  /order/api/v2/request-loan/loanstatement-list/borrower:
    get:
      tags:
        - Order > order scheduled
      summary: Loan Statement List for Borrower
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  loanStatements:
                    type: array
                    items:
                      type: object
                      properties:
                        statementId:
                          type: string
                          example: "loan-stmt-12345"
                        borrowerId:
                          type: string
                          example: "borrower-56789"
                        loanAmount:
                          type: number
                          format: double
                          example: 1200.50
                        outstandingAmount:
                          type: number
                          format: double
                          example: 800.25
                        dueDate:
                          type: string
                          format: date
                          example: "2024-08-15"
                        status:
                          type: string
                          example: "Pending"
  /order/api/v2/order/tpt/create:
    post:
      tags:
        - Order > Order v2
      summary: QR Transfer to Wallet
      security:
        - bearerAuth: []
      parameters:
        - name: versionCode
          in: query
          required: true
          schema:
            type: integer
            example: 22
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerDetails:
                  type: object
                  properties:
                    phone:
                      type: string
                      example: '8349212145'
                    email:
                      type: string
                      example: ''
                    name:
                      type: string
                      example: jitendra
                orderDetails:
                  type: object
                  properties:
                    paymentType:
                      type: string
                      example: QR_PAYMENT
                    deliveryAddress:
                      type: object
                      properties:
                        address:
                          type: object
                          properties:
                            fullName:
                              type: string
                              example: Bubu
                            city:
                              type: string
                              example: Ghatal
                            country:
                              type: string
                              example: India
                            houseNumber:
                              type: string
                              example: N009
                            state:
                              type: string
                              example: West Bengal
                            street1:
                              type: string
                              example: S1
                            street2:
                              type: string
                              example: Bus stand
                            zip:
                              type: string
                              example: '721212'
                            contacts:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: 6583c96f7a18ad6133c9ec05
                                  value:
                                    type: string
                                    example: '9749316005'
                                  contactType:
                                    type: string
                                    example: PRIMARY_PHONE
                        loc:
                          type: object
                          properties:
                            type:
                              type: string
                              example: Point
                            coordinates:
                              type: array
                              items:
                                type: number
                              example: [87.74680710000001, 22.6636967]
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 649002a32a1644b35ff384d0
                          description_summary:
                            type: string
                            example: instore_3
                          provider:
                            type: string
                            example: 63f4918b4d83affadea06858
                          catalogId:
                            type: string
                            example: 63341926d88907fee5411713
                          productType:
                            type: string
                            example: NORMAL
                          IsSellable:
                            type: string
                            example: 'TRUE'
                          IsQuotable:
                            type: boolean
                            example: false
                          IsIncludingTax:
                            type: boolean
                            example: false
                          isTPT:
                            type: boolean
                            example: true
                          offlineOnly:
                            type: boolean
                            example: false
                          B2B:
                            type: boolean
                            example: false
                          sellerContact:
                            type: string
                            example: '9745632136'
                          Type:
                            type: string
                            example: PRODUCT
                          b2bType:
                            type: string
                            example: '0'
                          Price:
                            type: number
                            example: 25
                          City:
                            type: string
                            example: Ghatal
                          Country:
                            type: string
                            example: India
                          State:
                            type: string
                            example: West Bengal
                          Lng:
                            type: number
                            example: 87.74680710000001
                          Lat:
                            type: number
                            example: 22.6636967
                          Address:
                            type: object
                            properties:
                              Lng:
                                type: number
                                example: 87.74680710000001
                              Lat:
                                type: number
                                example: 22.6636967
                              City:
                                type: string
                                example: Ghatal
                              State:
                                type: string
                                example: West Bengal
                              Country:
                                type: string
                                example: India
                              Address:
                                type: string
                                example: Ghatal, West Bengal 721212, India
                              location:
                                type: array
                                items:
                                  type: number
                                example: [87.74680710000001, 22.6636967]
                          isDeleted:
                            type: boolean
                            example: false
                          tenant:
                            type: string
                            example: 62726568a2e7d713d89e4357
                          providerName:
                            type: string
                            example: Ratul Seller
                          isOffline:
                            type: boolean
                            example: true
                          variations:
                            type: object
                            example: null
                          Category:
                            type: string
                            example: Dal
                          Market:
                            type: string
                            example: Grocery
                          slug:
                            type: string
                            example: ratul-seller-instore_3-735
                          integer_attributes:
                            type: array
                            items:
                              type: object
                            example: []
                          string_attributes:
                            type: array
                            items:
                              type: object
                              properties:
                                attribute_name:
                                  type: string
                                  example: Name
                                attribute_value:
                                  type: string
                                  example: instore_3
                                attribute_name_en:
                                  type: string
                                  example: Name
                          product_summary:
                            type: object
                            properties:
                              images:
                                type: object
                                properties:
                                  icon:
                                    type: string
                                    example: https://teka-dev.s3.amazonaws.com/images/seller/items/lj2j5at2ffnpr
                                  smallImage:
                                    type: string
                                    example: https://teka-dev.s3.amazonaws.com/images/seller/items/lj2j5dmb9gp2h
                                  bigImage:
                                    type: string
                                    example: https://teka-dev.s3.amazonaws.com/images/seller/items/lj2j5gd1p7sc9
                                  alternateImages:
                                    type: array
                                    items:
                                      type: object
                                    example: []
                          tags:
                            type: array
                            items:
                              type: string
                            example: [instore_3, instore_3, Ghatal, West Bengal 721212, India]
                          createdAt:
                            type: string
                            example: '2023-06-19T07:24:19.983Z'
                          updatedAt:
                            type: string
                            example: '2024-01-04T06:51:33.245Z'
                          avgRating:
                            type: number
                            example: 0
                          totalReviews:
                            type: number
                            example: 0
                          itemIndex:
                            type: number
                            example: 79961
                          productId:
                            type: string
                            example: 649002a32a1644b35ff384d0
                          qty:
                            type: number
                            example: 1
                          itemCode:
                            type: string
                            example: instore_3
                          catalogSlug:
                            type: string
                            example: ratul-seller-instore_3-735
                          shippingMethod:
                            type: string
                            example: Pickup
                          taxRate:
                            type: number
                            example: 0
                          tax_type:
                            type: string
                            example: exclusive
                          price:
                            type: number
                            example: 25
                          id:
                            type: string
                            example: 649002a32a1644b35ff384d0
                    deliveryType:
                      type: string
                      example: instore
                    totalDiscount:
                      type: number
                      example: 0
                    platformDiscount:
                      type: number
                      example: 0
                    maxReturnPeriod:
                      type: string
                      example: 24 Hours
                    subTotal:
                      type: number
                      example: 25
                    tax_amount:
                      type: number
                      example: 0
                    totalAmount:
                      type: number
                      example: 25
                    currency:
                      type: string
                      example: INR
                paymentDetails:
                  type: object
                  properties:
                    customerId:
                      type: string
                      example: 635671f21e110ab555dfa820
                    txnId:
                      type: string
                      example: 231904000012
                    amount:
                      type: number
                      example: 25
                    paymentType:
                      type: string
                      example: QR_PAYMENT
                    isWallet:
                      type: boolean
                      example: false
                    qrType:
                      type: string
                      example: UPI
                    isWalletQuotaExceeded:
                      type: boolean
                      example: false
                    versionCode:
                      type: integer
                      example: 22
                    tipAmount:
                      type: number
                      example: 0
                    totalAmount:
                      type: number
                      example: 25
                    transactionTime:
                      type: string
                      example: '2024-01-04T06:51:33.245Z'
                    status:
                      type: string
                      example: INITIATED
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /order/api/v2/request-loan/loan-repayment:
   post:
    tags:
      - Order > Order v2
    summary: Loan Repayment
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - amount
              - month
              - receiver
              - payer
            properties:
              amount:
                type: number
                example: 121
              month:
                type: integer
                example: 4
              receiver:
                type: object
                properties:
                  _id:
                    type: string
                    example: "66065af22ef4ab09ea492d0b"
              payer:
                type: object
                properties:
                  name:
                    type: string
                    example: "Pravat"
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                repaymentId:
                  type: string
                  example: "repay-12345"
                status:
                  type: string
                  example: "Success"
  /order/api/v2/order/verify:
   post:
    tags:
      - Order > Order v2
    summary: Wallet Transfer
    parameters:
      - name: orderHash
        in: query
        required: true
        schema:
          type: string
          description: Unique identifier for the order
          example: '111'
      - name: orderId
        in: query
        required: true
        schema:
          type: string
          description: Unique identifier for the order
          example: '1708783443093'
      - name: payment_type
        in: query
        required: true
        schema:
          type: string
          description: Type of payment method
          example: 'WALLET_TRANSFER'
      - name: payments_orderId
        in: query
        required: true
        schema:
          type: string
          description: Order ID related to the payment
          example: '1708783443093'
      - name: payments_amount
        in: query
        required: true
        schema:
          type: number
          description: Amount to be transferred
          example: 20
      - name: payments_items
        in: query
        schema:
          type: string
          description: Comma-separated list of items involved in the payment
          example: '{}'
      - name: receviedBy_id
        in: query
        required: true
        schema:
          type: string
          description: Unique identifier for the receiver
          example: '65b88c31f7e9330cd87a261b'
      - name: receviedBy_name
        in: query
        required: true
        schema:
          type: string
          description: Name of the receiver
          example: 'Ajay2'
      - name: receviedBy_email
        in: query
        required: true
        schema:
          type: string
          description: Email address of the receiver
          example: 'ajay@gmail.com'
      - name: receviedBy_phone
        in: query
        required: true
        schema:
          type: string
          description: Phone number of the receiver
          example: '8932893832'
      - name: receviedBy_category
        in: query
        required: true
        schema:
          type: string
          description: Category of the receiver
          example: 'CUSTOMER'
      - name: receviedBy_avatar
        in: query
        schema:
          type: string
          format: uri
          description: URL of the receiver's avatar
          example: 'https://upload.wikimedia.org/wikipedia/en/thumb/8/86/Avatar_Aang.png/220px-Avatar_Aang.png'
      - name: notes
        in: query
        required: true
        schema:
          type: string
          description: Additional notes about the transfer
          example: 'Wallet transfer to ajay'
      - name: customerDetails_customerName
        in: query
        required: true
        schema:
          type: string
          description: Name of the customer
          example: 'ajay'
      - name: customerDetails_customerPhone
        in: query
        required: true
        schema:
          type: string
          description: Phone number of the customer
          example: '989189181'
      - name: customerDetails_customerEmail
        in: query
        required: true
        schema:
          type: string
          description: Email address of the customer
          example: 'ajay@gmail.com'
      - name: customerDetails_orderAmount
        in: query
        required: true
        schema:
          type: string
          description: Amount of the order
          example: '20'
      - name: orderDetails_deliveryAddress_city
        in: query
        required: true
        schema:
          type: string
          description: City for delivery address
          example: 'Delhi'
      - name: orderDetails_deliveryAddress_loc_lat
        in: query
        required: true
        schema:
          type: string
          description: Latitude of the delivery location
          example: '8923893289'
      - name: orderDetails_deliveryAddress_loc_lng
        in: query
        required: true
        schema:
          type: string
          description: Longitude of the delivery location
          example: '019191'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - orderHash
              - orderId
              - payment
              - payments
              - receviedBy
              - notes
              - customerDetails
              - orderDetails
            properties:
              orderHash:
                type: string
                description: Unique identifier for the order
                example: '111'
              orderId:
                type: string
                description: Unique identifier for the order
                example: '1708783443093'
              payment:
                type: object
                required:
                  - type
                properties:
                  type:
                    type: string
                    description: Type of payment method
                    example: 'WALLET_TRANSFER'
              payments:
                type: object
                required:
                  - orderId
                  - amount
                  - items
                properties:
                  orderId:
                    type: string
                    description: Order ID related to the payment
                    example: '1708783443093'
                  amount:
                    type: number
                    description: Amount to be transferred
                    example: 20
                  items:
                    type: array
                    description: List of items involved in the payment
                    items:
                      type: object
                      description: Item details (currently empty)
                      example: {}
              receviedBy:
                type: object
                required:
                  - _id
                  - name
                  - email
                  - phone
                  - category
                properties:
                  _id:
                    type: string
                    description: Unique identifier for the receiver
                    example: '65b88c31f7e9330cd87a261b'
                  name:
                    type: string
                    description: Name of the receiver
                    example: 'Ajay2'
                  email:
                    type: string
                    description: Email address of the receiver
                    example: 'ajay@gmail.com'
                  phone:
                    type: string
                    description: Phone number of the receiver
                    example: '8932893832'
                  category:
                    type: string
                    description: Category of the receiver
                    example: 'CUSTOMER'
                  avatar:
                    type: string
                    format: uri
                    description: URL of the receiver's avatar
                    example: 'https://upload.wikimedia.org/wikipedia/en/thumb/8/86/Avatar_Aang.png/220px-Avatar_Aang.png'
              notes:
                type: string
                description: Additional notes about the transfer
                example: 'Wallet transfer to ajay'
              customerDetails:
                type: object
                required:
                  - customerName
                  - customerPhone
                  - customerEmail
                  - orderAmount
                properties:
                  customerName:
                    type: string
                    description: Name of the customer
                    example: 'ajay'
                  customerPhone:
                    type: string
                    description: Phone number of the customer
                    example: '989189181'
                  customerEmail:
                    type: string
                    description: Email address of the customer
                    example: 'ajay@gmail.com'
                  orderAmount:
                    type: string
                    description: Amount of the order
                    example: '20'
              orderDetails:
                type: object
                required:
                  - deliveryAddress
                properties:
                  deliveryAddress:
                    type: object
                    required:
                      - address
                      - loc
                    properties:
                      address:
                        type: object
                        required:
                          - city
                        properties:
                          city:
                            type: string
                            description: City for delivery address
                            example: 'Delhi'
                      loc:
                        type: object
                        required:
                          - lat
                          - lng
                        properties:
                          lat:
                            type: string
                            description: Latitude of the delivery location
                            example: '8923893289'
                          lng:
                            type: string
                            description: Longitude of the delivery location
                            example: '019191'
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the operation was successful
                  example: true
                message:
                  type: string
                  description: A message providing additional information
                  example: 'Wallet transfer completed successfully'
  /order/api/v2/order/create:
    post:
      tags:
        - Order > Order v2
      summary: Create an order
      parameters:
        - name: tenant
          in: query
          required: true
          schema:
            type: string
            example: 65b76fe258abb2dbf758e423
        - name: quoteId
          in: query
          required: true
          schema:
            type: string
            example: QR80295306
        - name: customerDetails.category
          in: query
          schema:
            type: string
            example: CUSTOMER
        - name: customerDetails.id
          in: query
          schema:
            type: string
            example: 65dc20203adf7bad72df772a
        - name: customerDetails.name
          in: query
          schema:
            type: string
            example: Hmanshu
        - name: customerDetails.email
          in: query
          schema:
            type: string
            example: customer@gmail.com
        - name: customerDetails.phone
          in: query
          schema:
            type: string
            example: +91 93637 53523
        - name: orderDetails.deliveryAddress.Lng
          in: query
          schema:
            type: number
            example: 78.444315
        - name: orderDetails.deliveryAddress.Lat
          in: query
          schema:
            type: number
            example: 17.4300112
        - name: orderDetails.deliveryAddress.City
          in: query
          schema:
            type: string
            example: Hyderabad
        - name: orderDetails.deliveryAddress.State
          in: query
          schema:
            type: string
            example: Telangana
        - name: orderDetails.deliveryAddress.Country
          in: query
          schema:
            type: string
            example: India
        - name: orderDetails.deliveryAddress.Address
          in: query
          schema:
            type: string
            example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
        - name: orderDetails.deliveryAddress.location[0]
          in: query
          schema:
            type: number
            example: 78.444315
        - name: orderDetails.deliveryAddress.location[1]
          in: query
          schema:
            type: number
            example: 17.4300112
        - name: orderDetails.orderAmount
          in: query
          schema:
            type: string
            example: "1200"
        - name: orderDetails.paymentType
          in: query
          schema:
            type: string
            example: WALLET
        - name: orderDetails.items[0].Price
          in: query
          schema:
            type: string
            example: "1200"
        - name: orderDetails.items[0].catalogId
          in: query
          schema:
            type: string
            example: 65cb01201f2eaa343696d683
        - name: orderDetails.items[0].provider
          in: query
          schema:
            type: string
            example: 65cb06847fa8b3455260f4fa
        - name: orderDetails.items[0].productType
          in: query
          schema:
            type: string
            example: NORMAL
        - name: orderDetails.items[0].isDeleted
          in: query
          schema:
            type: boolean
            example: false
        - name: orderDetails.items[0].description_summary
          in: query
          schema:
            type: string
            example: Loan Offer
        - name: orderDetails.items[0].Type
          in: query
          schema:
            type: string
            example: PRODUCT
        - name: orderDetails.items[0].createdAt
          in: query
          schema:
            type: string
            format: date-time
            example: "2022-06-30T11:30:17.876Z"
        - name: orderDetails.items[0].tenant
          in: query
          schema:
            type: string
            example: 65b76fe258abb2dbf758e423
        - name: orderDetails.items[0].providerName
          in: query
          schema:
            type: string
            example: Nimtala Store
        - name: orderDetails.items[0]._id
          in: query
          schema:
            type: string
            example: 65f174b75a8699181eb76bac
        - name: orderDetails.items[0].qty
          in: query
          schema:
            type: number
            example: 1
        - name: payment.type
          in: query
          schema:
            type: string
            example: WALLET
        - name: custom.paymentType
          in: query
          schema:
            type: string
            example: INSTANT
        - name: custom.rePay
          in: query
          schema:
            type: string
            example: INSTALLMENT
        - name: custom.tenure
          in: query
          schema:
            type: integer
            example: 3
        - name: custom.allowAutoPayment
          in: query
          schema:
            type: boolean
            example: true
        - name: custom.scheduleDate
          in: query
          schema:
            type: string
            format: date
            example: "2024-03-01"
        - name: custom.installments[0].principle
          in: query
          schema:
            type: string
            example: "1200"
        - name: custom.installments[0].dueDate
          in: query
          schema:
            type: string
            format: date
            example: "2024-03-01"
        - name: custom.installments[0].interest
          in: query
          schema:
            type: string
            example: "3"
        - name: custom.installments[0].amount
          in: query
          schema:
            type: string
            example: "219"
        - name: custom.installments[0].month
          in: query
          schema:
            type: integer
            example: 3
        - name: custom.requestTo._id
          in: query
          schema:
            type: string
            example: 65b886b9f7e93388ce7a25e5
        - name: custom.requestTo.name
          in: query
          schema:
            type: string
            example: Himanshu 2
        - name: custom.requestTo.email
          in: query
          schema:
            type: string
            example: himnshu2@gmail.com
        - name: custom.requestTo.phone
          in: query
          schema:
            type: string
            example: +91 2365 476 546
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerDetails:
                  type: object
                  properties:
                    category:
                      type: string
                      example: CUSTOMER
                    id:
                      type: string
                      example: 65dc20203adf7bad72df772a
                    name:
                      type: string
                      example: Hmanshu
                    email:
                      type: string
                      example: customer@gmail.com
                    phone:
                      type: string
                      example: "+91 93637 53523"
                orderDetails:
                  type: object
                  properties:
                    deliveryAddress:
                      type: object
                      properties:
                        Lng:
                          type: number
                          example: 78.444315
                        Lat:
                          type: number
                          example: 17.4300112
                        City:
                          type: string
                          example: Hyderabad
                        State:
                          type: string
                          example: Telangana
                        Country:
                          type: string
                          example: India
                        Address:
                          type: string
                          example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                        location:
                          type: array
                          items:
                            type: number
                          example: [78.444315, 17.4300112]
                    orderAmount:
                      type: string
                      example: "1200"
                    paymentType:
                      type: string
                      example: WALLET
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          Price:
                            type: string
                            example: "1200"
                          catalogId:
                            type: string
                            example: 65cb01201f2eaa343696d683
                          provider:
                            type: string
                            example: 65cb06847fa8b3455260f4fa
                          productType:
                            type: string
                            example: NORMAL
                          isDeleted:
                            type: boolean
                            example: false
                          description_summary:
                            type: string
                            example: Loan Offer
                          Type:
                            type: string
                            example: PRODUCT
                          createdAt:
                            type: string
                            format: date-time
                            example: "2022-06-30T11:30:17.876Z"
                          tenant:
                            type: string
                            example: 65b76fe258abb2dbf758e423
                          providerName:
                            type: string
                            example: Nimtala Store
                          _id:
                            type: string
                            example: 65f174b75a8699181eb76bac
                          qty:
                            type: number
                            example: 1
                          Address:
                            type: object
                            properties:
                              Lng:
                                type: number
                                example: 78.444315
                              Lat:
                                type: number
                                example: 17.4300112
                              City:
                                type: string
                                example: Hyderabad
                              State:
                                type: string
                                example: Telangana
                              Country:
                                type: string
                                example: India
                              Address:
                                type: string
                                example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                              location:
                                type: array
                                items:
                                  type: number
                                example: [78.444315, 17.4300112]
                payment:
                  type: object
                  properties:
                    type:
                      type: string
                      example: WALLET
                custom:
                  type: object
                  properties:
                    paymentType:
                      type: string
                      example: INSTANT
                    rePay:
                      type: string
                      example: INSTALLMENT
                    tenure:
                      type: integer
                      example: 3
                    allowAutoPayment:
                      type: boolean
                      example: true
                    scheduleDate:
                      type: string
                      format: date
                      example: "2024-03-01"
                    installments:
                      type: array
                      items:
                        type: object
                        properties:
                          principle:
                            type: string
                            example: "1200"
                          dueDate:
                            type: string
                            format: date
                            example: "2024-03-01"
                          interest:
                            type: string
                            example: "3"
                          amount:
                            type: string
                            example: "219"
                          month:
                            type: integer
                            example: 3
                    requestTo:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: 65b886b9f7e93388ce7a25e5
                        name:
                          type: string
                          example: Himanshu 2
                        email:
                          type: string
                          example: himnshu2@gmail.com
                        phone:
                          type: string
                          example: "+91 2365 476 546"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Request successful
                  data:
                    type: object
                    properties:
                      tenant:
                        type: string
                        example: "65b76fe258abb2dbf758e423"
                      quoteId:
                        type: string
                        example: "QR80295306"
                      customerDetails:
                        type: object
                        properties:
                          category:
                            type: string
                            example: CUSTOMER
                          id:
                            type: string
                            example: "65dc20203adf7bad72df772a"
                          name:
                            type: string
                            example: Hmanshu
                          email:
                            type: string
                            example: customer@gmail.com
                          phone:
                            type: string
                            example: "+91 93637 53523"
                      orderDetails:
                        type: object
                        properties:
                          deliveryAddress:
                            type: object
                            properties:
                              Lng:
                                type: number
                                example: 78.444315
                              Lat:
                                type: number
                                example: 17.4300112
                              City:
                                type: string
                                example: Hyderabad
                              State:
                                type: string
                                example: Telangana
                              Country:
                                type: string
                                example: India
                              Address:
                                type: string
                                example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                              location:
                                type: array
                                items:
                                  type: number
                                example: [78.444315, 17.4300112]
                          orderAmount:
                            type: string
                            example: "1200"
                          paymentType:
                            type: string
                            example: WALLET
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                Price:
                                  type: string
                                  example: "1200"
                                catalogId:
                                  type: string
                                  example: 65cb01201f2eaa343696d683
                                provider:
                                  type: string
                                  example: 65cb06847fa8b3455260f4fa
                                productType:
                                  type: string
                                  example: NORMAL
                                isDeleted:
                                  type: boolean
                                  example: false
                                description_summary:
                                  type: string
                                  example: Loan Offer
                                Type:
                                  type: string
                                  example: PRODUCT
                                createdAt:
                                  type: string
                                  format: date-time
                                  example: "2022-06-30T11:30:17.876Z"
                                tenant:
                                  type: string
                                  example: 65b76fe258abb2dbf758e423
                                providerName:
                                  type: string
                                  example: Nimtala Store
                                _id:
                                  type: string
                                  example: 65f174b75a8699181eb76bac
                                qty:
                                  type: number
                                  example: 1
                                Address:
                                  type: object
                                  properties:
                                    Lng:
                                      type: number
                                      example: 78.444315
                                    Lat:
                                      type: number
                                      example: 17.4300112
                                    City:
                                      type: string
                                      example: Hyderabad
                                    State:
                                      type: string
                                      example: Telangana
                                    Country:
                                      type: string
                                      example: India
                                    Address:
                                      type: string
                                      example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                                    location:
                                      type: array
                                      items:
                                        type: number
                                      example: [78.444315, 17.4300112]
                      payment:
                        type: object
                        properties:
                          type:
                            type: string
                            example: WALLET
                      custom:
                        type: object
                        properties:
                          paymentType:
                            type: string
                            example: INSTANT
                          rePay:
                            type: string
                            example: INSTALLMENT
                          tenure:
                            type: integer
                            example: 3
                          allowAutoPayment:
                            type: boolean
                            example: true
                          scheduleDate:
                            type: string
                            format: date
                            example: "2024-03-01"
                          installments:
                            type: array
                            items:
                              type: object
                              properties:
                                principle:
                                  type: string
                                  example: "1200"
                                dueDate:
                                  type: string
                                  format: date
                                  example: "2024-03-01"
                                interest:
                                  type: string
                                  example: "3"
                                amount:
                                  type: string
                                  example: "219"
                                month:
                                  type: integer
                                  example: 3
                          requestTo:
                            type: object
                            properties:
                              _id:
                                type: string
                                example: 65b886b9f7e93388ce7a25e5
                              name:
                                type: string
                                example: Himanshu 2
                              email:
                                type: string
                                example: himnshu2@gmail.com
                              phone:
                                type: string
                                example: "+91 2365 476 546"
  /order/api/v2/order/notify-borrower:
     post:
      tags:
        - Order > Order v2
      summary: Notify borrower
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: string
            example: '1710764919264'
        - name: notifyType
          in: query
          required: false
          schema:
            type: string
            example: 'EMAIL'
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                borrowerDetails:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "John Doe"
                    email:
                      type: string
                      example: "john.doe@example.com"
                    phone:
                      type: string
                      example: "+91 98765 43210"
                notificationMessage:
                  type: string
                  example: "Your order is now confirmed and will be delivered soon."
                
      security:
        - bearerAuth: []
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Notification sent successfully"
                  data:
                    type: object
                    properties:
                      orderId:
                        type: string
                        example: "1710764919264"
                      notifyType:
                        type: string
                        example: "EMAIL"
                      borrowerDetails:
                        type: object
                        properties:
                          name:
                            type: string
                            example: "John Doe"
                          email:
                            type: string
                            example: "john.doe@example.com"
                          phone:
                            type: string
                            example: "+91 98765 43210"
                      notificationMessage:
                        type: string
                        example: "Your order is now confirmed and will be delivered soon."
  /order/api/v2/order/order-details/{orderId}:
    get:
      tags:
        - Order > Order v2
      summary: Get Order Details
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            example: "1710764919264"
        - name: customerEmail
          in: query
          required: false
          schema:
            type: string
            example: "customer@example.com"
        - name: includePaymentInfo
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Order details fetched successfully"
                  data:
                    type: object
                    properties:
                      orderId:
                        type: string
                        example: "1710764919264"
                      customerDetails:
                        type: object
                        properties:
                          name:
                            type: string
                            example: "John Doe"
                          email:
                            type: string
                            example: "customer@example.com"
                          phone:
                            type: string
                            example: "+91 98765 43210"
                      orderDetails:
                        type: object
                        properties:
                          orderAmount:
                            type: number
                            example: 1200
                          paymentType:
                            type: string
                            example: "WALLET"
                          deliveryAddress:
                            type: object
                            properties:
                              fullName:
                                type: string
                                example: "John Doe"
                              city:
                                type: string
                                example: "Hyderabad"
                              state:
                                type: string
                                example: "Telangana"
                              country:
                                type: string
                                example: "India"
                              zip:
                                type: string
                                example: "500073"
                              location:
                                type: object
                                properties:
                                  lat:
                                    type: number
                                    example: 17.4300112
                                  lng:
                                    type: number
                                    example: 78.444315
                      paymentInfo:
                        type: object
                        properties:
                          paymentType:
                            type: string
                            example: "WALLET"
                          paymentStatus:
                            type: string
                            example: "COMPLETED"
                          paymentAmount:
                            type: number
                            example: 1200
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-02-14T03:59:21.199Z"          
  /order/api/v2/request-loan/details:
    get:
      tags:
        - Order > Order v2
      summary: Quote By Order Details
      description: Fetch details for a loan request based on the provided `quoteId`.
      security:
        - bearerAuth: []
      parameters:
        - name: quoteId
          in: query
          description: The unique identifier for the loan quote.
          required: true
          schema:
            type: string
          example: QR04683731
        - name: customerId
          in: query
          description: The unique identifier of the customer associated with the loan request.
          schema:
            type: string
          example: "65dc20203adf7bad72df772a"
        - name: includePaymentInfo
          in: query
          description: A flag to include payment information in the response.
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful response with loan request details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: true
                  message:
                    type: string
                    description: Descriptive message about the response.
                    example: "Loan details fetched successfully."
                  data:
                    type: object
                    description: Contains the loan request details.
                    properties:
                      quoteId:
                        type: string
                        description: Unique identifier of the loan quote.
                        example: QR04683731
                      customerDetails:
                        type: object
                        description: Details of the customer associated with the loan request.
                        properties:
                          name:
                            type: string
                            description: Full name of the customer.
                            example: "John Doe"
                          email:
                            type: string
                            description: Email address of the customer.
                            example: "customer@example.com"
                          phone:
                            type: string
                            description: Phone number of the customer.
                            example: "+91 98765 43210"
                      orderDetails:
                        type: object
                        description: Details of the order associated with the loan request.
                        properties:
                          orderAmount:
                            type: number
                            description: Total amount of the order.
                            example: 1200
                          paymentType:
                            type: string
                            description: Payment method used for the order.
                            example: "WALLET"
                      paymentInfo:
                        type: object
                        description: Payment information, if `includePaymentInfo` is true.
                        properties:
                          paymentType:
                            type: string
                            description: The payment method used.
                            example: "WALLET"
                          status:
                            type: string
                            description: Current payment status.
                            example: "COMPLETED"
  /order/api/v2/request-loan/total-lending-amount:
    get:
      tags:
        - Order > Order v2
      summary: Total Lender Amount
      description: Retrieves the total lending amount for a specific loan request.
      security:
        - bearerAuth: []
      parameters:
        - name: lenderId
          in: query
          description: The unique identifier of the lender for whom the total lending amount is being fetched.
          required: true
          schema:
            type: string
          example: "65b76fe258abb2dbf758e423"
        - name: loanType
          in: query
          description: The type of loan for which the total lending amount is calculated (e.g., `PERSONAL`, `BUSINESS`).
          schema:
            type: string
            example: "PERSONAL"
        - name: fromDate
          in: query
          description: The start date for calculating the total lending amount (in `YYYY-MM-DD` format).
          schema:
            type: string
            format: date
            example: "2023-01-01"
        - name: toDate
          in: query
          description: The end date for calculating the total lending amount (in `YYYY-MM-DD` format).
          schema:
            type: string
            format: date
            example: "2023-12-31"
      responses:
        '200':
          description: Successful response with the total lending amount.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: true
                  totalLendingAmount:
                    type: number
                    description: The total amount of loans issued by the lender within the specified criteria.
                    example: 1500000
                  currency:
                    type: string
                    description: The currency in which the total lending amount is calculated.
                    example: "INR"
                  message:
                    type: string
                    description: Additional information about the result.
                    example: "Total lending amount calculated successfully."
  /order/api/v2/request-loan/create:
    post:
      tags:
        - Order > Order v2
      summary: Request Loan Order with Query Parameters
      description: Creates a new loan order request by passing all data through query parameters.
      security:
        - bearerAuth: []
      parameters:
        - name: tenant
          in: query
          description: Unique identifier for the tenant.
          required: true
          schema:
            type: string
          example: "65b76fe258abb2dbf758e423"
        - name: quoteId
          in: query
          description: Unique identifier for the quote associated with the loan request.
          required: true
          schema:
            type: string
          example: "QR80295306"
        - name: customerCategory
          in: query
          description: Category of the customer.
          required: true
          schema:
            type: string
          example: "CUSTOMER"
        - name: customerId
          in: query
          description: Unique identifier for the customer.
          required: true
          schema:
            type: string
          example: "65dc20203adf7bad72df772a"
        - name: customerName
          in: query
          description: Name of the customer.
          required: true
          schema:
            type: string
          example: "Hmanshu"
        - name: customerEmail
          in: query
          description: Email address of the customer.
          required: true
          schema:
            type: string
          example: "customer@gmail.com"
        - name: customerPhone
          in: query
          description: Phone number of the customer.
          required: true
          schema:
            type: string
          example: "+91 93637 53523"
        - name: deliveryLng
          in: query
          description: Longitude of the delivery location.
          required: true
          schema:
            type: number
          example: 78.444315
        - name: deliveryLat
          in: query
          description: Latitude of the delivery location.
          required: true
          schema:
            type: number
          example: 17.4300112
        - name: deliveryCity
          in: query
          description: City of the delivery location.
          required: true
          schema:
            type: string
          example: "Hyderabad"
        - name: deliveryState
          in: query
          description: State of the delivery location.
          required: true
          schema:
            type: string
          example: "Telangana"
        - name: deliveryCountry
          in: query
          description: Country of the delivery location.
          required: true
          schema:
            type: string
          example: "India"
        - name: deliveryAddress
          in: query
          description: Full address of the delivery location.
          required: true
          schema:
            type: string
          example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
        - name: orderAmount
          in: query
          description: Total amount of the order.
          required: true
          schema:
            type: string
          example: "1200"
        - name: paymentType
          in: query
          description: Payment type used for the order.
          required: true
          schema:
            type: string
          example: "WALLET"
        - name: itemPrice
          in: query
          description: Price of the item.
          required: true
          schema:
            type: string
          example: "1200"
        - name: itemCatalogId
          in: query
          description: Catalog identifier for the item.
          required: true
          schema:
            type: string
          example: "65cb01201f2eaa343696d683"
        - name: itemProvider
          in: query
          description: Provider identifier for the item.
          required: true
          schema:
            type: string
          example: "65cb06847fa8b3455260f4fa"
        - name: itemProductType
          in: query
          description: Type of product.
          required: true
          schema:
            type: string
          example: "NORMAL"
        - name: itemIsDeleted
          in: query
          description: Whether the item is deleted (false by default).
          required: true
          schema:
            type: boolean
          example: false
        - name: itemDescriptionSummary
          in: query
          description: Summary description of the item.
          required: true
          schema:
            type: string
          example: "Loan Offer"
        - name: itemType
          in: query
          description: The type of the item.
          required: true
          schema:
            type: string
          example: "PRODUCT"
        - name: itemCreatedAt
          in: query
          description: Creation date of the item.
          required: true
          schema:
            type: string
            format: date-time
          example: "2022-06-30T11:30:17.876Z"
        - name: itemTenant
          in: query
          description: Tenant identifier associated with the item.
          required: true
          schema:
            type: string
          example: "65b76fe258abb2dbf758e423"
        - name: itemProviderName
          in: query
          description: Name of the provider for the item.
          required: true
          schema:
            type: string
          example: "Nimtala Store"
        - name: itemId
          in: query
          description: Unique identifier for the item.
          required: true
          schema:
            type: string
          example: "65f174b75a8699181eb76bac"
        - name: itemQty
          in: query
          description: Quantity of the item.
          required: true
          schema:
            type: integer
          example: 1
        - name: paymentTypes
          in: query
          description: Payment method used.
          required: true
          schema:
            type: string
          example: "WALLET"
        - name: customPaymentType
          in: query
          description: Type of payment, such as `INSTANT`.
          required: true
          schema:
            type: string
          example: "INSTANT"
        - name: customRePay
          in: query
          description: Repayment type (e.g., `INSTALLEMENT`).
          required: true
          schema:
            type: string
          example: "INSTALLEMENT"
        - name: customTenure
          in: query
          description: Loan tenure in months.
          required: true
          schema:
            type: integer
          example: 3
        - name: customAllowAutoPayment
          in: query
          description: Whether auto payment is allowed.
          required: true
          schema:
            type: boolean
          example: true
        - name: customScheduleDate
          in: query
          description: Scheduled date for the first payment.
          required: true
          schema:
            type: string
            format: date
          example: "2024-03-01"
        - name: installmentPrinciple
          in: query
          description: Principal amount for the installment.
          required: true
          schema:
            type: string
          example: "1200"
        - name: installmentDueDate
          in: query
          description: Due date for the installment.
          required: true
          schema:
            type: string
            format: date
          example: "2024-03-01"
        - name: installmentInterest
          in: query
          description: Interest for the installment.
          required: true
          schema:
            type: string
          example: "3"
        - name: installmentAmount
          in: query
          description: Total amount for the installment.
          required: true
          schema:
            type: string
          example: "219"
        - name: installmentMonth
          in: query
          description: Month of the installment.
          required: true
          schema:
            type: integer
          example: 3
        - name: requestToId
          in: query
          description: Unique identifier of the loan request recipient.
          required: true
          schema:
            type: string
          example: "65b886b9f7e93388ce7a25e5"
        - name: requestToName
          in: query
          description: Name of the loan request recipient.
          required: true
          schema:
            type: string
          example: "Himanshu 2"
        - name: requestToEmail
          in: query
          description: Email of the loan request recipient.
          required: true
          schema:
            type: string
          example: "himnshu2@gmail.com"
        - name: requestToPhone
          in: query
          description: Phone number of the loan request recipient.
          required: true
          schema:
            type: string
          example: "+91 2365 476 546"
      requestBody:
        description: Payload containing customer, order, and payment details for creating a loan request.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tenant:
                  type: string
                  description: Unique identifier for the tenant.
                  example: "65b76fe258abb2dbf758e423"
                quoteId:
                  type: string
                  description: Unique identifier for the quote.
                  example: "QR80295306"
                customerDetails:
                  type: object
                  description: Information about the customer making the loan request.
                  properties:
                    category:
                      type: string
                      description: Category of the customer.
                      example: "CUSTOMER"
                    id:
                      type: string
                      description: Unique identifier of the customer.
                      example: "65dc20203adf7bad72df772a"
                    name:
                      type: string
                      description: Name of the customer.
                      example: "Hmanshu"
                    email:
                      type: string
                      description: Email address of the customer.
                      example: "customer@gmail.com"
                    phone:
                      type: string
                      description: Phone number of the customer.
                      example: "+91 93637 53523"
                orderDetails:
                  type: object
                  description: Detailed information about the order.
                  properties:
                    deliveryAddress:
                      type: object
                      description: Address details where the order will be delivered.
                      properties:
                        Lng:
                          type: number
                          description: Longitude of the delivery location.
                          example: 78.444315
                        Lat:
                          type: number
                          description: Latitude of the delivery location.
                          example: 17.4300112
                        City:
                          type: string
                          description: City of the delivery location.
                          example: "Hyderabad"
                        State:
                          type: string
                          description: State of the delivery location.
                          example: "Telangana"
                        Country:
                          type: string
                          description: Country of the delivery location.
                          example: "India"
                        Address:
                          type: string
                          description: Full address of the delivery location.
                          example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                        location:
                          type: array
                          description: Geographical coordinates (longitude, latitude) of the delivery location.
                          items:
                            type: number
                          example: [78.444315, 17.4300112]
                    orderAmount:
                      type: string
                      description: Total amount of the order.
                      example: "1200"
                    paymentType:
                      type: string
                      description: Payment type used for the order.
                      example: "WALLET"
                    items:
                      type: array
                      description: List of items included in the order.
                      items:
                        type: object
                        properties:
                          Price:
                            type: string
                            description: Price of the item.
                            example: "1200"
                          catalogId:
                            type: string
                            description: Catalog identifier for the item.
                            example: "65cb01201f2eaa343696d683"
                          provider:
                            type: string
                            description: Provider identifier for the item.
                            example: "65cb06847fa8b3455260f4fa"
                          productType:
                            type: string
                            description: Type of product.
                            example: "NORMAL"
                          isDeleted:
                            type: boolean
                            description: Whether the item is deleted.
                            example: false
                          description_summary:
                            type: string
                            description: Summary description of the item.
                            example: "Loan Offer"
                          Type:
                            type: string
                            description: The type of the item.
                            example: "PRODUCT"
                          createdAt:
                            type: string
                            format: date-time
                            description: The creation date of the item.
                            example: "2022-06-30T11:30:17.876Z"
                          tenant:
                            type: string
                            description: Tenant identifier associated with the item.
                            example: "65b76fe258abb2dbf758e423"
                          providerName:
                            type: string
                            description: Name of the provider for the item.
                            example: "Nimtala Store"
                          _id:
                            type: string
                            description: Unique identifier for the item.
                            example: "65f174b75a8699181eb76bac"
                          qty:
                            type: integer
                            description: Quantity of the item.
                            example: 1
                          Address:
                            type: object
                            description: Address of the item provider.
                            properties:
                              Lng:
                                type: number
                                description: Longitude of the provider's location.
                                example: 78.444315
                              Lat:
                                type: number
                                description: Latitude of the provider's location.
                                example: 17.4300112
                              City:
                                type: string
                                description: City of the provider's location.
                                example: "Hyderabad"
                              State:
                                type: string
                                description: State of the provider's location.
                                example: "Telangana"
                              Country:
                                type: string
                                description: Country of the provider's location.
                                example: "India"
                              Address:
                                type: string
                                description: Full address of the provider's location.
                                example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                              location:
                                type: array
                                description: Geographical coordinates of the provider's location.
                                items:
                                  type: number
                                example: [78.444315, 17.4300112]
                payment:
                  type: object
                  description: Payment details for the loan request.
                  properties:
                    type:
                      type: string
                      description: Payment method used.
                      example: "WALLET"
                custom:
                  type: object
                  description: Custom loan repayment options.
                  properties:
                    paymentType:
                      type: string
                      description: The type of payment (e.g., `INSTANT`).
                      example: "INSTANT"
                    rePay:
                      type: string
                      description: Repayment type (e.g., `INSTALLEMENT`).
                      example: "INSTALLEMENT"
                    tenure:
                      type: integer
                      description: Loan tenure in months.
                      example: 3
                    allowAutoPayment:
                      type: boolean
                      description: Whether auto payment is allowed.
                      example: true
                    scheduleDate:
                      type: string
                      format: date
                      description: The scheduled date for the first payment.
                      example: "2024-03-01"
                    installments:
                      type: array
                      description: List of installments for the loan.
                      items:
                        type: object
                        properties:
                          principle:
                            type: string
                            description: Principal amount for the installment.
                            example: "1200"
                          dueDate:
                            type: string
                            format: date
                            description: Due date for the installment.
                            example: "2024-03-01"
                          interest:
                            type: string
                            description: Interest for the installment.
                            example: "3"
                          amount:
                            type: string
                            description: Total amount for the installment.
                            example: "219"
                          month:
                            type: integer
                            description: The month of the installment.
                            example: 3
                    requestTo:
                      type: object
                      description: Information about the recipient of the loan request.
                      properties:
                        _id:
                          type: string
                          description: Unique identifier of the recipient.
                          example: "65b886b9f7e93388ce7a25e5"
                        name:
                          type: string
                          description: Name of the recipient.
                          example: "Himanshu 2"
                        email:
                          type: string
                          description: Email of the recipient.
                          example: "himnshu2@gmail.com"
                        phone:
                          type: string
                          description: Phone number of the recipient.
                          example: "+91 2365 476 546"

      responses:
        '200':
          description: Successful response indicating that the loan order was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: true
                  message:
                    type: string
                    description: Success message.
                    example: "Loan order created successfully."
                  orderId:
                    type: string
                    description: Unique identifier for the created loan order.
                    example: "1710764919264"
                    
  /approval/list:
    get:
      tags:
        - Approval-request
      summary: Approval Details ByID
      security:
        - noauthAuth: []
      parameters:
        - name: x-encrypted-key
          in: header
          description: The encrypted key for accessing the approval list
          required: true
          schema:
            type: string
            example: 65b76fe258abb2dbf758e423
        - name: assignTo
          in: query
          description: The ID of the assignee
          required: true
          schema:
            type: string
            example: 667256bf3a5b2f3f6a0a159b
      responses:
        '200':
          description: Approval details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  data:
                    type: object
                    example:
                      assignTo: "667256bf3a5b2f3f6a0a159b"
                      approvalStatus: "Pending"
        '404':
          description: Approval details not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Approval details not found"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Unauthorized access"
  /approval/group-request/cancel/{assignTo}:
    post:
      tags:
        - Approval-request
      summary: Cancel approval
      parameters:
        - name: x-encrypted-key
          in: header
          description: The encrypted key for canceling the approval request
          required: true
          schema:
            type: string
            example: 65b76fe258abb2dbf758e423
        - name: assignTo
          in: path
          description: The ID of the assignee whose approval request is being canceled
          required: true
          schema:
            type: string
            example: 667256bf3a5b2f3f6a0a159b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                history:
                  action: CANCELLED
                  description: CANCELLED
      responses:
        '200':
          description: Approval request canceled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "Approval request has been canceled"
        '404':
          description: Approval request not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Approval request not found"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Unauthorized access"
  /approval/group-request/reject/{assignTo}:
    post:
      tags:
        - Approval-request
      summary: Reject approval
      parameters:
        - name: x-encrypted-key
          in: header
          description: The encrypted key for rejecting the approval request
          required: true
          schema:
            type: string
            example: 65b76fe258abb2dbf758e423
        - name: assignTo
          in: path
          description: The ID of the assignee whose approval request is being rejected
          required: true
          schema:
            type: string
            example: 667256bf3a5b2f3f6a0a159b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                history:
                  action: REJECTED
                  description: REJECTED
      responses:
        '200':
          description: Approval request rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "Approval request has been rejected"
        '404':
          description: Approval request not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Approval request not found"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Unauthorized access"
  /001/group-request/accept/{assignTo}:
    post:
      tags:
        - Approval-request
      summary: Accept approval
      parameters:
        - name: assignTo
          in: path
          description: The ID of the assignee whose approval request is being accepted
          required: true
          schema:
            type: string
            example: 667256bf3a5b2f3f6a0a159b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                history:
                  action: APPROVED
                  description: APPROVED
                paymentSlot: 2
                autoDebit: 'true'
                status: ACTIVE
                providerId: 66a8b53fac4885354b0e75e4
                tenant: 65b76fe258abb2dbf758e423
                rating: 3
                profilePhoto: >-
                  https://www.pexels.com/photo/green-and-blue-peacock-feather-674010/
                type: GROUP_JOINING_REQUEST
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Approval request accepted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "Approval request has been accepted"
        '404':
          description: Approval request not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Approval request not found"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Unauthorized access"
  /approval/generate-multiple-approval-request:
    post:
      tags:
        - Approval-request
      summary: Generate multiple approval requests
      description: Creates multiple approval requests with the specified details.
      parameters:
        - in: query
          name: approvalType
          required: true
          schema:
            type: string
          description: The type of approval request.
          example: GROUP_JOINING_REQUEST
        - in: query
          name: assignToId
          required: true
          schema:
            type: string
          description: The ID of the user to whom the request is assigned.
          example: 669f3bb372d1be24641fc9ea
        - in: query
          name: assignToName
          required: true
          schema:
            type: string
          description: The name of the user to whom the request is assigned.
          example: B Y
        - in: query
          name: createdById
          required: true
          schema:
            type: string
          description: The ID of the user who created the request.
          example: 66150c5c0d3e09f9a8886edd
        - in: query
          name: createdByName
          required: true
          schema:
            type: string
          description: The name of the user who created the request.
          example: Tulasi Dwara
        - in: query
          name: paymentSlot
          required: true
          schema:
            type: integer
          description: Payment slot number associated with the request.
          example: 1
        - in: query
          name: providerGroupName
          required: true
          schema:
            type: string
          description: The name of the group associated with the request.
          example: Group test 5
        - in: query
          name: providerGroupProfilePhoto
          required: true
          schema:
            type: string
          description: The profile photo of the group associated with the request.
          example: hjfhadsjfhjdsahfhdsafhjdsahfljkdsahjksnjfinviureenviunvrniu3
        - in: query
          name: providerId
          required: true
          schema:
            type: string
          description: The ID of the provider associated with the request.
          example: 66a9d68e91d687c2563c6ad2
        - in: query
          name: status
          required: true
          schema:
            type: string
          description: The current status of the request.
          example: PENDING
        - in: query
          name: tenant
          required: true
          schema:
            type: string
          description: The tenant ID associated with the request.
          example: 65b76fe258abb2dbf758e423
        - in: query
          name: metaProfilePhoto
          required: true
          schema:
            type: string
          description: The profile photo associated with the user in the meta data.
          example: jkvnfdnvijdfnvnefovemvomfovoefvmo
        - in: query
          name: metaBadge
          required: true
          schema:
            type: string
          description: The badge level associated with the user in the meta data.
          example: silver
        - in: query
          name: metaRating
          required: true
          schema:
            type: string
          description: The rating associated with the user in the meta data.
          example: '3'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  approvalType:
                    type: string
                    description: The type of approval request.
                    example: GROUP_JOINING_REQUEST
                  assignTo:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the user to whom the request is assigned.
                        example: 669f3bb372d1be24641fc9ea
                      name:
                        type: string
                        description: The name of the user to whom the request is assigned.
                        example: B Y
                  createdBy:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the user who created the request.
                        example: 66150c5c0d3e09f9a8886edd
                      name:
                        type: string
                        description: The name of the user who created the request.
                        example: Tulasi Dwara
                  paymentSlot:
                    type: integer
                    description: Payment slot number associated with the request.
                    example: 1
                  provider:
                    type: object
                    properties:
                      groupName:
                        type: string
                        description: The name of the group associated with the request.
                        example: Group test 5
                      groupProfilePhoto:
                        type: string
                        description: The profile photo of the group associated with the request.
                        example: hjfhadsjfhjdsahfhdsafhjdsahfljkdsahjksnjfinviureenviunvrniu3
                      id:
                        type: string
                        description: The ID of the provider associated with the request.
                        example: 66a9d68e91d687c2563c6ad2
                  status:
                    type: string
                    description: The current status of the request.
                    example: PENDING
                  tenant:
                    type: string
                    description: The tenant ID associated with the request.
                    example: 65b76fe258abb2dbf758e423
                  meta:
                    type: object
                    properties:
                      profilePhoto:
                        type: string
                        description: The profile photo associated with the user in the meta data.
                        example: jkvnfdnvijdfnvnefovemvomfovoefvmo
                      badge:
                        type: string
                        description: The badge level associated with the user in the meta data.
                        example: silver
                      rating:
                        type: string
                        description: The rating associated with the user in the meta data.
                        example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
                      description: Indicates whether the request was successful.
                      example: true
                    message:
                      type: string
                      description: Message detailing the result of the request.
                      example: "Approval requests created successfully."
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: "Invalid API key."
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that the requested resource was not found.
                    example: "Resource not found."                  
            
  /faq/list-faq:
    get:
      tags:
        - Faq
      summary: List FAQ
      description: Retrieve a list of Frequently Asked Questions (FAQs) with optional filters.
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the request, typically `application/json`.
          required: true
          schema:
            type: string
          example: application/json
        - name: x-encrypted-key
          in: header
          description: Encrypted key required for security/authentication purposes.
          required: true
          schema:
            type: string
          example: 5eb0fea77d1ad50e0e6b10dd
        - name: category
          in: query
          description: Category to filter FAQs by.
          required: false
          schema:
            type: string
          example: "General"
        - name: language
          in: query
          description: Language code to filter FAQs (e.g., `en` for English, `fr` for French).
          required: false
          schema:
            type: string
          example: "en"
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Number of FAQs per page.
          required: false
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: Successful response containing the list of FAQs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  message:
                    type: string
                    description: Response message.
                    example: "FAQs retrieved successfully."
                  data:
                    type: array
                    description: List of FAQs.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the FAQ.
                          example: "faq123"
                        question:
                          type: string
                          description: The FAQ question.
                          example: "What is the return policy?"
                        answer:
                          type: string
                          description: The answer to the FAQ question.
                          example: "You can return items within 30 days of purchase."
                        category:
                          type: string
                          description: The category of the FAQ.
                          example: "Returns"
                        language:
                          type: string
                          description: Language of the FAQ.
                          example: "en"
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the FAQ was created.
                          example: "2023-08-13T12:00:00Z"
                          
  /smsemail/inapp/list:
    get:
      tags:
        - SmsEmail
      summary: Get the list of in-app notifications
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: The ID of the user for whom to retrieve the notifications.
          example: '{userId}'
      responses:
        '200':
          description: Successful response with a list of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the notification.
                      example: '12345'
                    message:
                      type: string
                      description: The content of the notification.
                      example: 'Your in-app notification message.'
                    timestamp:
                      type: string
                      format: date-time
                      description: The time when the notification was created.
                      example: '2024-08-20T12:34:56Z'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: 'Invalid API key.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that the requested resource was not found.
                    example: 'No notifications found for the user.'
  /smsemail/list:
    get:
      tags:
        - SmsEmail
      summary: Get the list of SMS and email notifications
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: The ID of the user for whom to retrieve the notifications.
          example: '{userId}'
      responses:
        '200':
          description: Successful response with a list of SMS and email notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the notification.
                      example: '12345'
                    type:
                      type: string
                      description: The type of notification (SMS or email).
                      example: 'email'
                    message:
                      type: string
                      description: The content of the notification.
                      example: 'Your SMS or email notification message.'
                    timestamp:
                      type: string
                      format: date-time
                      description: The time when the notification was created.
                      example: '2024-08-20T12:34:56Z'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: 'Invalid API key.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that the requested resource was not found.
                    example: 'No notifications found for the user.'
  /smsemail/inapp/new-notification:
    get:
      tags:
        - SmsEmail
      summary: Get new in-app notifications
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: The ID of the user for whom to retrieve new notifications.
          example: '{userId}'
      responses:
        '200':
          description: Successful response with new in-app notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the notification.
                      example: '12345'
                    message:
                      type: string
                      description: The content of the notification.
                      example: 'You have a new in-app notification.'
                    timestamp:
                      type: string
                      format: date-time
                      description: The time when the notification was created.
                      example: '2024-08-20T12:34:56Z'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: 'Invalid API key.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that the requested resource was not found.
                    example: 'No new notifications found for the user.'
  /smsemail/inapp/read/{id}:
    get:
      tags:
        - SmsEmail
      summary: Mark a notification as read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the notification to mark as read.
          example: '{notificationId}'
      responses:
        '200':
          description: Successful response confirming that the notification has been marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the notification was successfully marked as read.
                    example: true
                  message:
                    type: string
                    description: Confirmation message.
                    example: "Notification marked as read successfully."
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: "Invalid API key."
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that the requested notification was not found.
                    example: "Notification not found."                        
            
  /quote/api/v1/remote-update-status-quote:
    post:
      tags:
        - Quote
      summary: Update Status With QuoteId
      description: Update the status of a quote using its unique QuoteId.
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the request, typically `application/json`.
          required: true
          schema:
            type: string
          example: application/json
        - name: x-encrypted-key
          in: header
          description: Encrypted key for security/authentication purposes.
          required: true
          schema:
            type: string
          example: 5eb0fea77d1ad50e0e6b10dd
        - name: quoteId
          in: query
          description: The unique identifier of the quote to be updated.
          required: true
          schema:
            type: string
          example: QR12669939
        - name: status
          in: query
          description: The new status to be updated for the quote.
          required: true
          schema:
            type: string
          example: Accepted
      requestBody:
        description: The request body must contain the status and quoteId to update the quote's status.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: New status of the quote (e.g., Accepted, Rejected).
                  example: Accepted
                quoteId:
                  type: string
                  description: Unique identifier of the quote.
                  example: QR12669939
      responses:
        '200':
          description: Successful response indicating the quote status was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the update was successful.
                    example: true
                  message:
                    type: string
                    description: A message confirming the status update.
                    example: "Quote status updated successfully."
                  updatedQuote:
                    type: object
                    description: Details of the updated quote.
                    properties:
                      quoteId:
                        type: string
                        description: The unique identifier of the quote.
                        example: QR12669939
                      status:
                        type: string
                        description: The new status of the quote.
                        example: Accepted
                      updatedAt:
                        type: string
                        format: date-time
                        description: The date and time when the quote was updated.
                        example: "2024-08-13T12:34:56Z"
        '401':
          description: Unauthorized. Authentication failed or user does not have the necessary permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: false
                  error:
                    type: string
                    description: Error message indicating why the request failed.
                    example: "Unauthorized access. Please provide valid credentials."
        '404':
          description: Not Found. The requested quote does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: false
                  error:
                    type: string
                    description: Error message indicating why the resource was not found.
                    example: "Quote not found with the provided quoteId."
  /quote/api/v1/detail-quote/{id}:
    get:
      tags:
        - Quote
      summary: Get Quote Details by ID
      description: Retrieve the details of a specific quote using its unique identifier.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the quote.
          schema:
            type: string
            example: QR12669939
        - name: Content-Type
          in: header
          description: Content type of the request, typically `application/json`.
          required: true
          schema:
            type: string
          example: application/json
        - name: x-encrypted-key
          in: header
          description: Encrypted key for security/authentication purposes.
          required: true
          schema:
            type: string
          example: 5eb0fea77d1ad50e0e6b10dd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response indicating the quote details were retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the retrieval was successful.
                    example: true
                  quoteDetails:
                    type: object
                    description: The detailed information of the quote.
                    properties:
                      quoteId:
                        type: string
                        description: The unique identifier of the quote.
                        example: QR12669939
                      status:
                        type: string
                        description: Current status of the quote.
                        example: "Pending"
                      amount:
                        type: number
                        description: The total amount of the quote.
                        example: 1500.00
                      createdAt:
                        type: string
                        format: date-time
                        description: The date and time when the quote was created.
                        example: "2024-08-13T12:34:56Z"
        '401':
          description: Unauthorized. Authentication failed or user does not have the necessary permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: false
                  error:
                    type: string
                    description: Error message indicating why the request failed.
                    example: "Unauthorized access. Please provide valid credentials."
        '404':
          description: Not Found. The requested quote does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Indicates if the request was successful.
                    example: false
                  error:
                    type: string
                    description: Error message indicating why the resource was not found.
                    example: "Quote not found with the provided ID."
  /quote/api/v1/loan-request/create:
   post:
    tags:
      - Quote
    summary: Create Request Loan
    parameters:
      - name: customer.id
        in: query
        schema:
          type: string
        description: Unique identifier for the customer.
        example: "65dc20203adf7bad72df772a"
      - name: customer.name
        in: query
        schema:
          type: string
        description: Name of the customer.
        example: "Himanshu"
      - name: customer.email
        in: query
        schema:
          type: string
        description: Email address of the customer.
        example: "customer@gmail.com"
      - name: customer.phone
        in: query
        schema:
          type: string
        description: Phone number of the customer.
        example: "+91 93637 53523"
      - name: customer.category
        in: query
        schema:
          type: string
        description: Category of the customer.
        example: "CUSTOMER"
      - name: requestTo._id
        in: query
        schema:
          type: string
        description: Unique identifier for the request recipient.
        example: "65ea951e33dfed7a5f7622fb"
      - name: requestTo.name
        in: query
        schema:
          type: string
        description: Name of the request recipient.
        example: "Himanshu 2"
      - name: requestTo.email
        in: query
        schema:
          type: string
        description: Email address of the request recipient.
        example: "himnshu2@gmail.com"
      - name: requestTo.phone
        in: query
        schema:
          type: string
        description: Phone number of the request recipient.
        example: "+91 2365 476 546"
      - name: items[0].item.Price
        in: query
        schema:
          type: string
        description: Price of the item.
        example: "1200"
      - name: items[0].item.catalogId
        in: query
        schema:
          type: string
        description: Catalog identifier for the item.
        example: "65cb01201f2eaa343696d683"
      - name: items[0].item.provider
        in: query
        schema:
          type: string
        description: Provider identifier for the item.
        example: "65cb06847fa8b3455260f4fa"
      - name: items[0].item.productType
        in: query
        schema:
          type: string
        description: Type of the product.
        example: "NORMAL"
      - name: items[0].item.isDeleted
        in: query
        schema:
          type: boolean
        description: Indicates if the item is deleted.
        example: false
      - name: items[0].item.description_summary
        in: query
        schema:
          type: string
        description: Summary description of the item.
        example: "Loan Offer"
      - name: items[0].item.Type
        in: query
        schema:
          type: string
        description: Type of the item.
        example: "PRODUCT"
      - name: items[0].item.createdAt
        in: query
        schema:
          type: string
          format: date-time
        description: Creation date of the item.
        example: "2022-06-30T11:30:17.876Z"
      - name: items[0].item.tenant
        in: query
        schema:
          type: string
        description: Tenant identifier for the item.
        example: "65b76fe258abb2dbf758e423"
      - name: items[0].item.providerName
        in: query
        schema:
          type: string
        description: Name of the provider for the item.
        example: "Nimtala Store"
      - name: items[0].item._id
        in: query
        schema:
          type: string
        description: Unique identifier for the item.
        example: "65f174b75a8699181eb76bac"
      - name: items[0].item.qty
        in: query
        schema:
          type: integer
        description: Quantity of the item.
        example: 1
      - name: items[0].item.Address.Lng
        in: query
        schema:
          type: number
          format: double
        description: Longitude of the address.
        example: 78.444315
      - name: items[0].item.Address.Lat
        in: query
        schema:
          type: number
          format: double
        description: Latitude of the address.
        example: 17.4300112
      - name: items[0].item.Address.City
        in: query
        schema:
          type: string
        description: City of the address.
        example: "Hyderabad"
      - name: items[0].item.Address.State
        in: query
        schema:
          type: string
        description: State of the address.
        example: "Telangana"
      - name: items[0].item.Address.Country
        in: query
        schema:
          type: string
        description: Country of the address.
        example: "India"
      - name: items[0].item.Address.Address
        in: query
        schema:
          type: string
        description: Full address.
        example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
      - name: items[0].item.Address.location[0]
        in: query
        schema:
          type: number
          format: double
        description: Longitude of the address location.
        example: 78.444315
      - name: items[0].item.Address.location[1]
        in: query
        schema:
          type: number
          format: double
        description: Latitude of the address location.
        example: 17.4300112
      - name: items[0].custom.productName
        in: query
        schema:
          type: string
        description: Product name for the custom item.
        example: "Loan Offer"
      - name: items[0].custom.requestedprice
        in: query
        schema:
          type: string
        description: Requested price for the custom item.
        example: "1200"
      - name: items[0].custom.description
        in: query
        schema:
          type: string
        description: Description for the custom item.
        example: "need a loan"
      - name: items[0].custom.quantity
        in: query
        schema:
          type: integer
        description: Quantity for the custom item.
        example: 1
      - name: custom.paymentType
        in: query
        schema:
          type: string
        description: Payment type.
        example: "INSTANT"
      - name: custom.rePay
        in: query
        schema:
          type: string
        description: Repayment type.
        example: "INSTALLMENT"
      - name: custom.tenure
        in: query
        schema:
          type: integer
        description: Loan tenure in months.
        example: 3
      - name: custom.allowAutoPayment
        in: query
        schema:
          type: boolean
        description: Indicates if auto payment is allowed.
        example: true
      - name: custom.scheduleDate
        in: query
        schema:
          type: string
          format: date
        description: Date for the payment schedule.
        example: "2024-03-01"
      - name: custom.installments[0].principle
        in: query
        schema:
          type: string
        description: Principal amount for the installment.
        example: "1200"
      - name: custom.installments[0].dueDate
        in: query
        schema:
          type: string
          format: date
        description: Due date for the installment.
        example: "2024-03-01"
      - name: custom.installments[0].interest
        in: query
        schema:
          type: string
        description: Interest amount for the installment.
        example: "3"
      - name: custom.installments[0].amount
        in: query
        schema:
          type: string
        description: Total amount for the installment.
        example: "219"
      - name: custom.installments[0].month
        in: query
        schema:
          type: integer
        description: Month number for the installment.
        example: 3

    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the customer.
                    example: "65dc20203adf7bad72df772a"
                  name:
                    type: string
                    description: Name of the customer.
                    example: "Himanshu"
                  email:
                    type: string
                    description: Email address of the customer.
                    example: "customer@gmail.com"
                  phone:
                    type: string
                    description: Phone number of the customer.
                    example: "+91 93637 53523"
                  category:
                    type: string
                    description: Category of the customer.
                    example: "CUSTOMER"
              requestTo:
                type: object
                properties:
                  _id:
                    type: string
                    description: Unique identifier for the request recipient.
                    example: "65ea951e33dfed7a5f7622fb"
                  name:
                    type: string
                    description: Name of the request recipient.
                    example: "Himanshu 2"
                  email:
                    type: string
                    description: Email address of the request recipient.
                    example: "himnshu2@gmail.com"
                  phone:
                    type: string
                    description: Phone number of the request recipient.
                    example: "+91 2365 476 546"
              items:
                type: array
                items:
                  type: object
                  properties:
                    item:
                      type: object
                      properties:
                        Price:
                          type: string
                          description: Price of the item.
                          example: "1200"
                        catalogId:
                          type: string
                          description: Catalog identifier for the item.
                          example: "65cb01201f2eaa343696d683"
                        provider:
                          type: string
                          description: Provider identifier for the item.
                          example: "65cb06847fa8b3455260f4fa"
                        productType:
                          type: string
                          description: Type of the product.
                          example: "NORMAL"
                        isDeleted:
                          type: boolean
                          description: Indicates if the item is deleted.
                          example: false
                        description_summary:
                          type: string
                          description: Summary description of the item.
                          example: "Loan Offer"
                        Type:
                          type: string
                          description: Type of the item.
                          example: "PRODUCT"
                        createdAt:
                          type: string
                          format: date-time
                          description: Creation date of the item.
                          example: "2022-06-30T11:30:17.876Z"
                        tenant:
                          type: string
                          description: Tenant identifier for the item.
                          example: "65b76fe258abb2dbf758e423"
                        providerName:
                          type: string
                          description: Name of the provider for the item.
                          example: "Nimtala Store"
                        _id:
                          type: string
                          description: Unique identifier for the item.
                          example: "65f174b75a8699181eb76bac"
                        qty:
                          type: integer
                          description: Quantity of the item.
                          example: 1
                        Address:
                          type: object
                          properties:
                            Lng:
                              type: number
                              format: double
                              description: Longitude of the address.
                              example: 78.444315
                            Lat:
                              type: number
                              format: double
                              description: Latitude of the address.
                              example: 17.4300112
                            City:
                              type: string
                              description: City of the address.
                              example: "Hyderabad"
                            State:
                              type: string
                              description: State of the address.
                              example: "Telangana"
                            Country:
                              type: string
                              description: Country of the address.
                              example: "India"
                            Address:
                              type: string
                              description: Full address.
                              example: "8-3-1109, 1, Srinagar Colony Main Rd, Sri Nagar Colony, Venkateshwara Hills, Banjara Hills, Hyderabad, Telangana 500073, India"
                            location:
                              type: array
                              items:
                                type: number
                                format: double
                              description: Location coordinates (Longitude and Latitude).
                              example:
                                - 78.444315
                                - 17.4300112
                    custom:
                      type: object
                      properties:
                        productName:
                          type: string
                          description: Product name for the custom item.
                          example: "Loan Offer"
                        requestedprice:
                          type: string
                          description: Requested price for the custom item.
                          example: "1200"
                        description:
                          type: string
                          description: Description for the custom item.
                          example: "need a loan"
                        quantity:
                          type: integer
                          description: Quantity for the custom item.
                          example: 1
              custom:
                type: object
                properties:
                  paymentType:
                    type: string
                    description: Payment type.
                    example: "INSTANT"
                  rePay:
                    type: string
                    description: Repayment type.
                    example: "INSTALLMENT"
                  tenure:
                    type: integer
                    description: Loan tenure in months.
                    example: 3
                  allowAutoPayment:
                    type: boolean
                    description: Indicates if auto payment is allowed.
                    example: true
                  scheduleDate:
                    type: string
                    format: date
                    description: Date for the payment schedule.
                    example: "2024-03-01"
                  installments:
                    type: array
                    items:
                      type: object
                      properties:
                        principle:
                          type: string
                          description: Principal amount for the installment.
                          example: "1200"
                        dueDate:
                          type: string
                          format: date
                          description: Due date for the installment.
                          example: "2024-03-01"
                        interest:
                          type: string
                          description: Interest amount for the installment.
                          example: "3"
                        amount:
                          type: string
                          description: Total amount for the installment.
                          example: "219"
                        month:
                          type: integer
                          description: Month number for the installment.
                          example: 3
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              description: Response object
              properties:
                message:
                  type: string
                  description: Success message.
                  example: "Loan request created successfully."
      '401':
        description: Unauthorized - Authentication required or invalid credentials.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message for unauthorized access.
                  example: "Unauthorized access."
      '404':
        description: Not Found - The requested resource could not be found.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message for not found resources.
                  example: "Requested resource not found."
  /quote/api/v1/loan-request/list:
    get:
      tags:
        - Quote
      summary: List Loan Requests
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: Type of loan request to filter by (e.g., 'sent', 'received').
          example: 'sent'
        - name: fromDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Start date for the loan request filtering.
          example: '2024-01-01'
        - name: toDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: End date for the loan request filtering.
          example: '2024-12-31'
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination.
          example: 1
      responses:
        '200':
          description: Successful response with a list of loan requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  requests:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The unique identifier of the loan request.
                          example: 'abc123'
                        status:
                          type: string
                          description: Current status of the loan request.
                          example: 'Pending'
                        amount:
                          type: number
                          format: float
                          description: Amount of the loan request.
                          example: 5000.00
                        date:
                          type: string
                          format: date
                          description: Date when the loan request was created.
                          example: '2024-08-20'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: 'Invalid or missing authentication token.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that no loan requests were found.
                    example: 'No loan requests found.'
  /quote/api/v1/loan-request/update/{id}:
    put:
      tags:
        - Quote
      summary: Update Loan Request
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: The new status of the loan request.
                  example: 'Cancelled'
              required:
                - status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the loan request to update.
          example: 'abc123'
      responses:
        '200':
          description: Successful response confirming that the loan request has been updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the loan request was successfully updated.
                    example: true
                  message:
                    type: string
                    description: Confirmation message.
                    example: 'Loan request updated successfully.'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating why the request failed.
                    example: 'Invalid or missing authentication token.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                    example: false
                  message:
                    type: string
                    description: Error message indicating that the specified loan request was not found.
                    example: 'Loan request not found.'          
                    
                    
 
  /wallet/v2/wallet/balance:
   get:
    tags:
      - Wallet > Wallet V2
    summary: Get Wallet Balance
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                balance:
                  type: number
                  example: 1500.75
                currency:
                  type: string
                  example: "USD"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Unauthorized access."
                status:
                  type: string
                  example: "error"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "An error occurred while fetching the wallet balance."
                status:
                  type: string
                  example: "error"
  /wallet/v2/wallet/withdraw-wallet-balance:
   post:
    tags:
      - Wallet > Wallet V2
    summary: Wallet Withdrawal
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
                type: string
                example: '10'
              payment:
                type: object
                properties:
                  paymentMethod:
                    type: string
                    example: CASHFREE
              amountType:
                type: object
                properties:
                  key:
                    type: string
                    example: '356'
                  value:
                    type: string
                    example: INR
    security:
      - bearerAuth: []
    parameters:
      - name: versionCode
        in: query
        schema:
          type: integer
        example: 21
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                  example: "abc123xyz789"
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Withdrawal successful"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid withdrawal request"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
  /wallet/v2/wallet/internal/get-balance:
   post:
    tags:
      - Wallet > Wallet V2
    summary: Wallet Balance Internal
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: string
                example: 62dfa93011ce2a0c5942e52a
              type:
                type: string
                example: ''
    security:
      - noauthAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                balance:
                  type: number
                  example: 1000.00
                currency:
                  type: string
                  example: INR
                user:
                  type: string
                  example: 62dfa93011ce2a0c5942e52a
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request data"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while fetching the balance"
  /001/wallet/history:
   get:
    tags:
      - Wallet > Wallet
    summary: Get Wallet History
    security:
      - bearerAuth: []
    parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
        example: application/json
      - name: filter
        in: query
        schema:
          type: string
        example: custom
      - name: from
        in: query
        schema:
          type: string
        example: '2024-01-01T00:00:00Z'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                history:
                  type: array
                  items:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        example: '5f15fdf14a7b5c001c8edff9'
                      amount:
                        type: number
                        example: 150.00
                      date:
                        type: string
                        example: '2024-07-10T14:48:00Z'
                      type:
                        type: string
                        example: 'debit'
                      status:
                        type: string
                        example: 'completed'
                      description:
                        type: string
                        example: 'Payment to XYZ'
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request parameters"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while retrieving wallet history"
  /001/v2/wallet/total-transfer-list:
   get:
    tags:
      - Wallet > Wallet V2
    summary: Total Transfer List
    security:
      - bearerAuth: []
    parameters:
      - name: x-encrypted-key
        in: header
        schema:
          type: string
        example: 65b76fe258abb2dbf758e423
      - name: type
        in: query
        schema:
          type: string
        example: total
      - name: year
        in: query
        schema:
          type: integer
        example: '2024'
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request parameters"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while retrieving the total transfer list"
  /000/v2/transaction-schedule/recurring:
   get:
    tags:
      - Wallet > Wallet V2
    summary: Schedule Payment
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request parameters"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "No recurring payment schedules found"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while retrieving the schedule"
  /000/v2/transaction-schedule/details/65e6e1b722c0a75e6f5a45b4:
   get:
    tags:
      - Wallet > Wallet V2
    summary: Wallet Transaction Details By Id
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid transaction ID"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Transaction not found"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while retrieving the transaction details"
  /000/v2/transaction-schedule/create:
   post:
    tags:
      - Wallet > Wallet V2
    summary: Wallet Schedule Payment
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              user:
                _id: 65dc20203adf7bad72df772a
                category: CUSTOMER
              tenant: 65b76fe258abb2dbf758e423
              transfer:
                payer:
                  _id: 65dc20203adf7bad72df772a
                  name: ajay
                  avatar: ''
                receiver:
                  _id: 65b88c31f7e9330cd87a261b
                  name: Ajay2
                  avatar: >-
                    https://upload.wikimedia.org/wikipedia/en/thumb/8/86/Avatar_Aang.png/220px-Avatar_Aang.png
              status: PENDING
              meta:
                orderId: '1708783443093'
                type: WALLET
                notes: New Schedule payment
              amount: 20
              amountType:
                key: '566'
                value: NGN
              transactionRef: '1708783443093'
              cadence: WEEKLY
              scheduleDate: 10-03-2024
    security:
      - noauthAuth: []
    parameters:
      - name: authorization
        in: header
        schema:
          type: string
        example: QjerP42QCa1lGn3MgXXyKg
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request data"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while scheduling the payment"
  /000/v2/transaction-schedule/update/{transactionId}:
   patch:
    tags:
      - Wallet > Wallet V2
    summary: Cancel Schedule Payment
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              status: CANCELLED
    security:
      - bearerAuth: []
    parameters:
      - name: transactionId
        in: path
        schema:
          type: string
        required: true
        example: 65e6e1b722c0a75e6f5a45b4
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request data"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Transaction not found"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while updating the transaction schedule"
  /000/v2/transaction-schedule/list:
   get:
    tags:
      - Wallet > Wallet V2
    summary: Recurring Transaction list
    security:
      - bearerAuth: []
    parameters:
      - name: status
        in: query
        schema:
          type: string
        example: ACTIVE
      - name: fromDate
        in: query
        schema:
          type: string
          format: date
        example: '2024-01-01'
      - name: toDate
        in: query
        schema:
          type: string
          format: date
        example: '2024-12-31'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Recurring transactions retrieved successfully"
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        example: "1708783443093"
                      payer:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "65dc20203adf7bad72df772a"
                          name:
                            type: string
                            example: "ajay"
                      receiver:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "65b88c31f7e9330cd87a261b"
                          name:
                            type: string
                            example: "Ajay2"
                      amount:
                        type: number
                        format: float
                        example: 20.00
                      scheduleDate:
                        type: string
                        format: date
                        example: "2024-10-10"
                      status:
                        type: string
                        example: "PENDING"
                      cadence:
                        type: string
                        example: "WEEKLY"
                      transactionRef:
                        type: string
                        example: "1708783443093"
                      notes:
                        type: string
                        example: "Scheduled payment for group"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while retrieving recurring transactions"
  /000/v2/wallet/filter:
   post:
    tags:
      - Wallet > Wallet V2
    summary: Wallet Transaction Filter and Details
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              walletId:
                type: string
                example: "65e544c033e83385a1e38c85"
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Wallet transactions retrieved successfully"
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        example: "1708783443093"
                      walletId:
                        type: string
                        example: "65e544c033e83385a1e38c85"
                      transactionType:
                        type: string
                        example: "DEPOSIT"
                      amount:
                        type: number
                        format: float
                        example: 100.00
                      transactionDate:
                        type: string
                        format: date
                        example: "2024-08-16"
                      description:
                        type: string
                        example: "Monthly deposit"
                      status:
                        type: string
                        example: "COMPLETED"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while retrieving wallet transactions"
  /wallet/groupwallet/get-group-payout-balance/{memberId}:
   get:
    tags:
      - Wallet > Group Wallet
    summary: Get Group Wallet Payout Balance
    parameters:
      - name: memberId
        in: path
        schema:
          type: string
        required: true
        description: The ID of the member whose group wallet payout balance is being retrieved.
    responses:
      '200':
        description: Successful response with the payout balance
        content:
          application/json:
            schema:
              type: object
              properties:
                memberId:
                  type: string
                  example: '123456789'
                  description: The ID of the member
                balance:
                  type: number
                  format: float
                  example: 1500.75
                  description: The payout balance available in the group wallet for the specified member
                currency:
                  type: string
                  example: 'USD'
                  description: The currency of the payout balance
              required:
                - memberId
                - balance
                - currency
      '400':
        description: Bad request, invalid or missing parameters
      '401':
        description: Unauthorized, invalid or missing authentication
      '404':
        description: Not found, member ID does not exist
      '500':
        description: Internal server error
  /001/groupwallet/get-group-payout-balance/667256bf3a5b2f3f6a0a159b:
   get:
    tags:
      - Wallet > Group Wallet
    summary: Get Group Wallet Payout Amount
    security:
      - noauthAuth: []
    responses:
      '200':
        description: Successful response with payout amount details
        content:
          application/json:
            schema:
              type: object
              properties:
                memberId:
                  type: string
                  example: '667256bf3a5b2f3f6a0a159b'
                  description: The ID of the member
                payoutAmount:
                  type: number
                  format: float
                  example: 2500.00
                  description: The payout amount available for the specified member
                currency:
                  type: string
                  example: 'USD'
                  description: The currency of the payout amount
              required:
                - memberId
                - payoutAmount
                - currency
      '400':
        description: Bad request, invalid or missing parameters
      '401':
        description: Unauthorized, invalid or missing authentication
      '404':
        description: Not found, member ID does not exist
      '500':
        description: Internal server error
  /001/groupwallet/update-statement:
    post:
      tags:
        - Wallet > Group Wallet
      summary: update-statement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 669101b9dfb3cc14099b83a3
                memberId: 664ed4f9951a8b7d37cacee4
                startDate: '2024-07-12T18:29:00.000Z'
                status: PAID
                type: statements
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /001/groupwallet/get-statement:
    get:
      tags:
        - Wallet > Group Wallet
      summary: get-statement
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /001/groupwallet/create-statement:
    post:
      tags:
        - Wallet > Group Wallet
      summary: create-statement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 668e895ea3479b17c38b6da1
                startDate: '2024-01-01T00:00:00.000Z'
                tenure: 2
                status: PENDING
                autoDebit: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /wallet/v2/wallet/filter:
    post:
      tags:
        - Wallet > Wallet V2
      summary: Wallet transaction histroy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                walletId: 65e544c033e83385a1e38c85
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /001/groupwallet/send-money:
   post:
    tags:
      - Wallet > Group Wallet
    summary: Send Money
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              tenant:
                type: string
                example: "65b76fe258abb2dbf758e423"
              amount:
                type: number
                format: float
                example: 908
              startDate:
                type: string
                format: date-time
                example: "2024-07-12T18:29:00.000+00:00"
              description:
                type: string
                example: "Credit contribution amount"
              receiver:
                type: object
                properties:
                  _id:
                    type: string
                    example: "66aa2a8c91d6872b3a3c6bae"
                  name:
                    type: string
                    example: "test 123"
              payer:
                type: object
                properties:
                  _id:
                    type: string
                    example: "667266b43a5b2fdb6d0a15bb"
                  category:
                    type: string
                    example: "CUSTOMER"
                  name:
                    type: string
                    example: "Pravat"
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                message:
                  type: string
                  example: "Money sent successfully"
                data:
                  type: object
                  properties:
                    transactionId:
                      type: string
                      example: "trans123456789"
                    amount:
                      type: number
                      format: float
                      example: 908
                    startDate:
                      type: string
                      format: date-time
                      example: "2024-07-12T18:29:00.000+00:00"
                    description:
                      type: string
                      example: "Credit contribution amount"
                    receiver:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "66aa2a8c91d6872b3a3c6bae"
                        name:
                          type: string
                          example: "test 123"
                    payer:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "667266b43a5b2fdb6d0a15bb"
                        category:
                          type: string
                          example: "CUSTOMER"
                        name:
                          type: string
                          example: "Pravat"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request parameters"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized access"
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "An error occurred while processing the request"                  
            
